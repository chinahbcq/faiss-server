// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: faiss_def.proto

#ifndef PROTOBUF_faiss_5fdef_2eproto__INCLUDED
#define PROTOBUF_faiss_5fdef_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace faiss_server {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_faiss_5fdef_2eproto();
void protobuf_AssignDesc_faiss_5fdef_2eproto();
void protobuf_ShutdownFile_faiss_5fdef_2eproto();

class DbDelRequest;
class DbListRequest;
class DbListResponse;
class DbListResponse_DbStatus;
class DbNewRequest;
class EmptyResponse;
class HGetDelRequest;
class HGetResponse;
class HSearchRequest;
class HSearchResponse;
class HSearchResponse_Result;
class HSetRequest;
class HSetResponse;
class PingRequest;
class PingResponse;

enum HSearchRequest_DistanceType {
  HSearchRequest_DistanceType_Euclid = 0,
  HSearchRequest_DistanceType_Cosine = 1,
  HSearchRequest_DistanceType_HSearchRequest_DistanceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HSearchRequest_DistanceType_HSearchRequest_DistanceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HSearchRequest_DistanceType_IsValid(int value);
const HSearchRequest_DistanceType HSearchRequest_DistanceType_DistanceType_MIN = HSearchRequest_DistanceType_Euclid;
const HSearchRequest_DistanceType HSearchRequest_DistanceType_DistanceType_MAX = HSearchRequest_DistanceType_Cosine;
const int HSearchRequest_DistanceType_DistanceType_ARRAYSIZE = HSearchRequest_DistanceType_DistanceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HSearchRequest_DistanceType_descriptor();
inline const ::std::string& HSearchRequest_DistanceType_Name(HSearchRequest_DistanceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HSearchRequest_DistanceType_descriptor(), value);
}
inline bool HSearchRequest_DistanceType_Parse(
    const ::std::string& name, HSearchRequest_DistanceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HSearchRequest_DistanceType>(
    HSearchRequest_DistanceType_descriptor(), name, value);
}
// ===================================================================

class PingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.PingRequest) */ {
 public:
  PingRequest();
  virtual ~PingRequest();

  PingRequest(const PingRequest& from);

  inline PingRequest& operator=(const PingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingRequest& default_instance();

  void Swap(PingRequest* other);

  // implements Message ----------------------------------------------

  inline PingRequest* New() const { return New(NULL); }

  PingRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingRequest& from);
  void MergeFrom(const PingRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string payload = 1;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const char* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:faiss_server.PingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static PingRequest* default_instance_;
};
// -------------------------------------------------------------------

class PingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.PingResponse) */ {
 public:
  PingResponse();
  virtual ~PingResponse();

  PingResponse(const PingResponse& from);

  inline PingResponse& operator=(const PingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingResponse& default_instance();

  void Swap(PingResponse* other);

  // implements Message ----------------------------------------------

  inline PingResponse* New() const { return New(NULL); }

  PingResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingResponse& from);
  void MergeFrom(const PingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string payload = 1;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  void set_payload(const char* value);
  void set_payload(const char* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:faiss_server.PingResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static PingResponse* default_instance_;
};
// -------------------------------------------------------------------

class DbNewRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.DbNewRequest) */ {
 public:
  DbNewRequest();
  virtual ~DbNewRequest();

  DbNewRequest(const DbNewRequest& from);

  inline DbNewRequest& operator=(const DbNewRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbNewRequest& default_instance();

  void Swap(DbNewRequest* other);

  // implements Message ----------------------------------------------

  inline DbNewRequest* New() const { return New(NULL); }

  DbNewRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbNewRequest& from);
  void MergeFrom(const DbNewRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DbNewRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string db_name = 1;
  void clear_db_name();
  static const int kDbNameFieldNumber = 1;
  const ::std::string& db_name() const;
  void set_db_name(const ::std::string& value);
  void set_db_name(const char* value);
  void set_db_name(const char* value, size_t size);
  ::std::string* mutable_db_name();
  ::std::string* release_db_name();
  void set_allocated_db_name(::std::string* db_name);

  // optional uint64 max_size = 2;
  void clear_max_size();
  static const int kMaxSizeFieldNumber = 2;
  ::google::protobuf::uint64 max_size() const;
  void set_max_size(::google::protobuf::uint64 value);

  // optional string model = 3;
  void clear_model();
  static const int kModelFieldNumber = 3;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // optional string request_id = 4;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 4;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // @@protoc_insertion_point(class_scope:faiss_server.DbNewRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr db_name_;
  ::google::protobuf::uint64 max_size_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static DbNewRequest* default_instance_;
};
// -------------------------------------------------------------------

class DbDelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.DbDelRequest) */ {
 public:
  DbDelRequest();
  virtual ~DbDelRequest();

  DbDelRequest(const DbDelRequest& from);

  inline DbDelRequest& operator=(const DbDelRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbDelRequest& default_instance();

  void Swap(DbDelRequest* other);

  // implements Message ----------------------------------------------

  inline DbDelRequest* New() const { return New(NULL); }

  DbDelRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbDelRequest& from);
  void MergeFrom(const DbDelRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DbDelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string db_name = 1;
  void clear_db_name();
  static const int kDbNameFieldNumber = 1;
  const ::std::string& db_name() const;
  void set_db_name(const ::std::string& value);
  void set_db_name(const char* value);
  void set_db_name(const char* value, size_t size);
  ::std::string* mutable_db_name();
  ::std::string* release_db_name();
  void set_allocated_db_name(::std::string* db_name);

  // optional string request_id = 2;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // @@protoc_insertion_point(class_scope:faiss_server.DbDelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr db_name_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static DbDelRequest* default_instance_;
};
// -------------------------------------------------------------------

class EmptyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.EmptyResponse) */ {
 public:
  EmptyResponse();
  virtual ~EmptyResponse();

  EmptyResponse(const EmptyResponse& from);

  inline EmptyResponse& operator=(const EmptyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyResponse& default_instance();

  void Swap(EmptyResponse* other);

  // implements Message ----------------------------------------------

  inline EmptyResponse* New() const { return New(NULL); }

  EmptyResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmptyResponse& from);
  void MergeFrom(const EmptyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EmptyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 error_code = 1;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int64 error_code() const;
  void set_error_code(::google::protobuf::int64 value);

  // optional string error_msg = 2;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 2;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // optional string request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // @@protoc_insertion_point(class_scope:faiss_server.EmptyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 error_code_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static EmptyResponse* default_instance_;
};
// -------------------------------------------------------------------

class DbListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.DbListRequest) */ {
 public:
  DbListRequest();
  virtual ~DbListRequest();

  DbListRequest(const DbListRequest& from);

  inline DbListRequest& operator=(const DbListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbListRequest& default_instance();

  void Swap(DbListRequest* other);

  // implements Message ----------------------------------------------

  inline DbListRequest* New() const { return New(NULL); }

  DbListRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbListRequest& from);
  void MergeFrom(const DbListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DbListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // @@protoc_insertion_point(class_scope:faiss_server.DbListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static DbListRequest* default_instance_;
};
// -------------------------------------------------------------------

class DbListResponse_DbStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.DbListResponse.DbStatus) */ {
 public:
  DbListResponse_DbStatus();
  virtual ~DbListResponse_DbStatus();

  DbListResponse_DbStatus(const DbListResponse_DbStatus& from);

  inline DbListResponse_DbStatus& operator=(const DbListResponse_DbStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbListResponse_DbStatus& default_instance();

  void Swap(DbListResponse_DbStatus* other);

  // implements Message ----------------------------------------------

  inline DbListResponse_DbStatus* New() const { return New(NULL); }

  DbListResponse_DbStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbListResponse_DbStatus& from);
  void MergeFrom(const DbListResponse_DbStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DbListResponse_DbStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 ntotal = 2;
  void clear_ntotal();
  static const int kNtotalFieldNumber = 2;
  ::google::protobuf::uint64 ntotal() const;
  void set_ntotal(::google::protobuf::uint64 value);

  // optional uint64 max_size = 3;
  void clear_max_size();
  static const int kMaxSizeFieldNumber = 3;
  ::google::protobuf::uint64 max_size() const;
  void set_max_size(::google::protobuf::uint64 value);

  // optional uint64 curr_max_id = 4;
  void clear_curr_max_id();
  static const int kCurrMaxIdFieldNumber = 4;
  ::google::protobuf::uint64 curr_max_id() const;
  void set_curr_max_id(::google::protobuf::uint64 value);

  // optional uint64 curr_persist_max_id = 5;
  void clear_curr_persist_max_id();
  static const int kCurrPersistMaxIdFieldNumber = 5;
  ::google::protobuf::uint64 curr_persist_max_id() const;
  void set_curr_persist_max_id(::google::protobuf::uint64 value);

  // optional string persist_path = 6;
  void clear_persist_path();
  static const int kPersistPathFieldNumber = 6;
  const ::std::string& persist_path() const;
  void set_persist_path(const ::std::string& value);
  void set_persist_path(const char* value);
  void set_persist_path(const char* value, size_t size);
  ::std::string* mutable_persist_path();
  ::std::string* release_persist_path();
  void set_allocated_persist_path(::std::string* persist_path);

  // optional string raw_data_path = 7;
  void clear_raw_data_path();
  static const int kRawDataPathFieldNumber = 7;
  const ::std::string& raw_data_path() const;
  void set_raw_data_path(const ::std::string& value);
  void set_raw_data_path(const char* value);
  void set_raw_data_path(const char* value, size_t size);
  ::std::string* mutable_raw_data_path();
  ::std::string* release_raw_data_path();
  void set_allocated_raw_data_path(::std::string* raw_data_path);

  // optional uint64 dimension = 8;
  void clear_dimension();
  static const int kDimensionFieldNumber = 8;
  ::google::protobuf::uint64 dimension() const;
  void set_dimension(::google::protobuf::uint64 value);

  // optional string model = 9;
  void clear_model();
  static const int kModelFieldNumber = 9;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // optional uint64 black_list_len = 10;
  void clear_black_list_len();
  static const int kBlackListLenFieldNumber = 10;
  ::google::protobuf::uint64 black_list_len() const;
  void set_black_list_len(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:faiss_server.DbListResponse.DbStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 ntotal_;
  ::google::protobuf::uint64 max_size_;
  ::google::protobuf::uint64 curr_max_id_;
  ::google::protobuf::uint64 curr_persist_max_id_;
  ::google::protobuf::internal::ArenaStringPtr persist_path_;
  ::google::protobuf::internal::ArenaStringPtr raw_data_path_;
  ::google::protobuf::uint64 dimension_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::uint64 black_list_len_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static DbListResponse_DbStatus* default_instance_;
};
// -------------------------------------------------------------------

class DbListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.DbListResponse) */ {
 public:
  DbListResponse();
  virtual ~DbListResponse();

  DbListResponse(const DbListResponse& from);

  inline DbListResponse& operator=(const DbListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DbListResponse& default_instance();

  void Swap(DbListResponse* other);

  // implements Message ----------------------------------------------

  inline DbListResponse* New() const { return New(NULL); }

  DbListResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DbListResponse& from);
  void MergeFrom(const DbListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DbListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DbListResponse_DbStatus DbStatus;

  // accessors -------------------------------------------------------

  // repeated .faiss_server.DbListResponse.DbStatus db_status = 2;
  int db_status_size() const;
  void clear_db_status();
  static const int kDbStatusFieldNumber = 2;
  const ::faiss_server::DbListResponse_DbStatus& db_status(int index) const;
  ::faiss_server::DbListResponse_DbStatus* mutable_db_status(int index);
  ::faiss_server::DbListResponse_DbStatus* add_db_status();
  ::google::protobuf::RepeatedPtrField< ::faiss_server::DbListResponse_DbStatus >*
      mutable_db_status();
  const ::google::protobuf::RepeatedPtrField< ::faiss_server::DbListResponse_DbStatus >&
      db_status() const;

  // optional int64 error_code = 3;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 3;
  ::google::protobuf::int64 error_code() const;
  void set_error_code(::google::protobuf::int64 value);

  // optional string error_msg = 4;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 4;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // optional string request_id = 5;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 5;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // @@protoc_insertion_point(class_scope:faiss_server.DbListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::faiss_server::DbListResponse_DbStatus > db_status_;
  ::google::protobuf::int64 error_code_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static DbListResponse* default_instance_;
};
// -------------------------------------------------------------------

class HGetDelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.HGetDelRequest) */ {
 public:
  HGetDelRequest();
  virtual ~HGetDelRequest();

  HGetDelRequest(const HGetDelRequest& from);

  inline HGetDelRequest& operator=(const HGetDelRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HGetDelRequest& default_instance();

  void Swap(HGetDelRequest* other);

  // implements Message ----------------------------------------------

  inline HGetDelRequest* New() const { return New(NULL); }

  HGetDelRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HGetDelRequest& from);
  void MergeFrom(const HGetDelRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HGetDelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string db_name = 1;
  void clear_db_name();
  static const int kDbNameFieldNumber = 1;
  const ::std::string& db_name() const;
  void set_db_name(const ::std::string& value);
  void set_db_name(const char* value);
  void set_db_name(const char* value, size_t size);
  ::std::string* mutable_db_name();
  ::std::string* release_db_name();
  void set_allocated_db_name(::std::string* db_name);

  // optional uint64 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string request_id = 4;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 4;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // @@protoc_insertion_point(class_scope:faiss_server.HGetDelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr db_name_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static HGetDelRequest* default_instance_;
};
// -------------------------------------------------------------------

class HGetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.HGetResponse) */ {
 public:
  HGetResponse();
  virtual ~HGetResponse();

  HGetResponse(const HGetResponse& from);

  inline HGetResponse& operator=(const HGetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HGetResponse& default_instance();

  void Swap(HGetResponse* other);

  // implements Message ----------------------------------------------

  inline HGetResponse* New() const { return New(NULL); }

  HGetResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HGetResponse& from);
  void MergeFrom(const HGetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes feature = 2;
  void clear_feature();
  static const int kFeatureFieldNumber = 2;
  const ::std::string& feature() const;
  void set_feature(const ::std::string& value);
  void set_feature(const char* value);
  void set_feature(const void* value, size_t size);
  ::std::string* mutable_feature();
  ::std::string* release_feature();
  void set_allocated_feature(::std::string* feature);

  // optional uint64 dimension = 5;
  void clear_dimension();
  static const int kDimensionFieldNumber = 5;
  ::google::protobuf::uint64 dimension() const;
  void set_dimension(::google::protobuf::uint64 value);

  // optional string request_id = 6;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 6;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // optional int64 error_code = 7;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 7;
  ::google::protobuf::int64 error_code() const;
  void set_error_code(::google::protobuf::int64 value);

  // optional string error_msg = 8;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 8;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // @@protoc_insertion_point(class_scope:faiss_server.HGetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr feature_;
  ::google::protobuf::uint64 dimension_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::int64 error_code_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static HGetResponse* default_instance_;
};
// -------------------------------------------------------------------

class HSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.HSetRequest) */ {
 public:
  HSetRequest();
  virtual ~HSetRequest();

  HSetRequest(const HSetRequest& from);

  inline HSetRequest& operator=(const HSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HSetRequest& default_instance();

  void Swap(HSetRequest* other);

  // implements Message ----------------------------------------------

  inline HSetRequest* New() const { return New(NULL); }

  HSetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HSetRequest& from);
  void MergeFrom(const HSetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HSetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string db_name = 1;
  void clear_db_name();
  static const int kDbNameFieldNumber = 1;
  const ::std::string& db_name() const;
  void set_db_name(const ::std::string& value);
  void set_db_name(const char* value);
  void set_db_name(const char* value, size_t size);
  ::std::string* mutable_db_name();
  ::std::string* release_db_name();
  void set_allocated_db_name(::std::string* db_name);

  // optional bytes feature = 3;
  void clear_feature();
  static const int kFeatureFieldNumber = 3;
  const ::std::string& feature() const;
  void set_feature(const ::std::string& value);
  void set_feature(const char* value);
  void set_feature(const void* value, size_t size);
  ::std::string* mutable_feature();
  ::std::string* release_feature();
  void set_allocated_feature(::std::string* feature);

  // optional string request_id = 7;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 7;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // @@protoc_insertion_point(class_scope:faiss_server.HSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr db_name_;
  ::google::protobuf::internal::ArenaStringPtr feature_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static HSetRequest* default_instance_;
};
// -------------------------------------------------------------------

class HSetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.HSetResponse) */ {
 public:
  HSetResponse();
  virtual ~HSetResponse();

  HSetResponse(const HSetResponse& from);

  inline HSetResponse& operator=(const HSetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HSetResponse& default_instance();

  void Swap(HSetResponse* other);

  // implements Message ----------------------------------------------

  inline HSetResponse* New() const { return New(NULL); }

  HSetResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HSetResponse& from);
  void MergeFrom(const HSetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HSetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string request_id = 2;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // optional int64 error_code = 3;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 3;
  ::google::protobuf::int64 error_code() const;
  void set_error_code(::google::protobuf::int64 value);

  // optional string error_msg = 4;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 4;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // @@protoc_insertion_point(class_scope:faiss_server.HSetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::int64 error_code_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static HSetResponse* default_instance_;
};
// -------------------------------------------------------------------

class HSearchRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.HSearchRequest) */ {
 public:
  HSearchRequest();
  virtual ~HSearchRequest();

  HSearchRequest(const HSearchRequest& from);

  inline HSearchRequest& operator=(const HSearchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HSearchRequest& default_instance();

  void Swap(HSearchRequest* other);

  // implements Message ----------------------------------------------

  inline HSearchRequest* New() const { return New(NULL); }

  HSearchRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HSearchRequest& from);
  void MergeFrom(const HSearchRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HSearchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef HSearchRequest_DistanceType DistanceType;
  static const DistanceType Euclid =
    HSearchRequest_DistanceType_Euclid;
  static const DistanceType Cosine =
    HSearchRequest_DistanceType_Cosine;
  static inline bool DistanceType_IsValid(int value) {
    return HSearchRequest_DistanceType_IsValid(value);
  }
  static const DistanceType DistanceType_MIN =
    HSearchRequest_DistanceType_DistanceType_MIN;
  static const DistanceType DistanceType_MAX =
    HSearchRequest_DistanceType_DistanceType_MAX;
  static const int DistanceType_ARRAYSIZE =
    HSearchRequest_DistanceType_DistanceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DistanceType_descriptor() {
    return HSearchRequest_DistanceType_descriptor();
  }
  static inline const ::std::string& DistanceType_Name(DistanceType value) {
    return HSearchRequest_DistanceType_Name(value);
  }
  static inline bool DistanceType_Parse(const ::std::string& name,
      DistanceType* value) {
    return HSearchRequest_DistanceType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string db_name = 1;
  void clear_db_name();
  static const int kDbNameFieldNumber = 1;
  const ::std::string& db_name() const;
  void set_db_name(const ::std::string& value);
  void set_db_name(const char* value);
  void set_db_name(const char* value, size_t size);
  ::std::string* mutable_db_name();
  ::std::string* release_db_name();
  void set_allocated_db_name(::std::string* db_name);

  // optional bytes feature = 2;
  void clear_feature();
  static const int kFeatureFieldNumber = 2;
  const ::std::string& feature() const;
  void set_feature(const ::std::string& value);
  void set_feature(const char* value);
  void set_feature(const void* value, size_t size);
  ::std::string* mutable_feature();
  ::std::string* release_feature();
  void set_allocated_feature(::std::string* feature);

  // optional uint64 top_k = 3;
  void clear_top_k();
  static const int kTopKFieldNumber = 3;
  ::google::protobuf::uint64 top_k() const;
  void set_top_k(::google::protobuf::uint64 value);

  // optional .faiss_server.HSearchRequest.DistanceType distance_type = 9;
  void clear_distance_type();
  static const int kDistanceTypeFieldNumber = 9;
  ::faiss_server::HSearchRequest_DistanceType distance_type() const;
  void set_distance_type(::faiss_server::HSearchRequest_DistanceType value);

  // optional string request_id = 10;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 10;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // @@protoc_insertion_point(class_scope:faiss_server.HSearchRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr db_name_;
  ::google::protobuf::internal::ArenaStringPtr feature_;
  ::google::protobuf::uint64 top_k_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  int distance_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static HSearchRequest* default_instance_;
};
// -------------------------------------------------------------------

class HSearchResponse_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.HSearchResponse.Result) */ {
 public:
  HSearchResponse_Result();
  virtual ~HSearchResponse_Result();

  HSearchResponse_Result(const HSearchResponse_Result& from);

  inline HSearchResponse_Result& operator=(const HSearchResponse_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HSearchResponse_Result& default_instance();

  void Swap(HSearchResponse_Result* other);

  // implements Message ----------------------------------------------

  inline HSearchResponse_Result* New() const { return New(NULL); }

  HSearchResponse_Result* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HSearchResponse_Result& from);
  void MergeFrom(const HSearchResponse_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HSearchResponse_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  float score() const;
  void set_score(float value);

  // optional uint64 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:faiss_server.HSearchResponse.Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 id_;
  float score_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static HSearchResponse_Result* default_instance_;
};
// -------------------------------------------------------------------

class HSearchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faiss_server.HSearchResponse) */ {
 public:
  HSearchResponse();
  virtual ~HSearchResponse();

  HSearchResponse(const HSearchResponse& from);

  inline HSearchResponse& operator=(const HSearchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HSearchResponse& default_instance();

  void Swap(HSearchResponse* other);

  // implements Message ----------------------------------------------

  inline HSearchResponse* New() const { return New(NULL); }

  HSearchResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HSearchResponse& from);
  void MergeFrom(const HSearchResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HSearchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef HSearchResponse_Result Result;

  // accessors -------------------------------------------------------

  // repeated .faiss_server.HSearchResponse.Result results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::faiss_server::HSearchResponse_Result& results(int index) const;
  ::faiss_server::HSearchResponse_Result* mutable_results(int index);
  ::faiss_server::HSearchResponse_Result* add_results();
  ::google::protobuf::RepeatedPtrField< ::faiss_server::HSearchResponse_Result >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::faiss_server::HSearchResponse_Result >&
      results() const;

  // optional string request_id = 2;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // optional int64 error_code = 3;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 3;
  ::google::protobuf::int64 error_code() const;
  void set_error_code(::google::protobuf::int64 value);

  // optional string error_msg = 4;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 4;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // @@protoc_insertion_point(class_scope:faiss_server.HSearchResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::faiss_server::HSearchResponse_Result > results_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::int64 error_code_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_faiss_5fdef_2eproto();
  friend void protobuf_AssignDesc_faiss_5fdef_2eproto();
  friend void protobuf_ShutdownFile_faiss_5fdef_2eproto();

  void InitAsDefaultInstance();
  static HSearchResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PingRequest

// optional string payload = 1;
inline void PingRequest::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PingRequest::payload() const {
  // @@protoc_insertion_point(field_get:faiss_server.PingRequest.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PingRequest::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.PingRequest.payload)
}
inline void PingRequest::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.PingRequest.payload)
}
inline void PingRequest::set_payload(const char* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.PingRequest.payload)
}
inline ::std::string* PingRequest::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.PingRequest.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PingRequest::release_payload() {
  // @@protoc_insertion_point(field_release:faiss_server.PingRequest.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PingRequest::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.PingRequest.payload)
}

// -------------------------------------------------------------------

// PingResponse

// optional string payload = 1;
inline void PingResponse::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PingResponse::payload() const {
  // @@protoc_insertion_point(field_get:faiss_server.PingResponse.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PingResponse::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.PingResponse.payload)
}
inline void PingResponse::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.PingResponse.payload)
}
inline void PingResponse::set_payload(const char* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.PingResponse.payload)
}
inline ::std::string* PingResponse::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.PingResponse.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PingResponse::release_payload() {
  // @@protoc_insertion_point(field_release:faiss_server.PingResponse.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PingResponse::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.PingResponse.payload)
}

// -------------------------------------------------------------------

// DbNewRequest

// optional string db_name = 1;
inline void DbNewRequest::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbNewRequest::db_name() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbNewRequest.db_name)
  return db_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbNewRequest::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbNewRequest.db_name)
}
inline void DbNewRequest::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbNewRequest.db_name)
}
inline void DbNewRequest::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbNewRequest.db_name)
}
inline ::std::string* DbNewRequest::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbNewRequest.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbNewRequest::release_db_name() {
  // @@protoc_insertion_point(field_release:faiss_server.DbNewRequest.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbNewRequest::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbNewRequest.db_name)
}

// optional uint64 max_size = 2;
inline void DbNewRequest::clear_max_size() {
  max_size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DbNewRequest::max_size() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbNewRequest.max_size)
  return max_size_;
}
inline void DbNewRequest::set_max_size(::google::protobuf::uint64 value) {
  
  max_size_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbNewRequest.max_size)
}

// optional string model = 3;
inline void DbNewRequest::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbNewRequest::model() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbNewRequest.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbNewRequest::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbNewRequest.model)
}
inline void DbNewRequest::set_model(const char* value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbNewRequest.model)
}
inline void DbNewRequest::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbNewRequest.model)
}
inline ::std::string* DbNewRequest::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbNewRequest.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbNewRequest::release_model() {
  // @@protoc_insertion_point(field_release:faiss_server.DbNewRequest.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbNewRequest::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbNewRequest.model)
}

// optional string request_id = 4;
inline void DbNewRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbNewRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbNewRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbNewRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbNewRequest.request_id)
}
inline void DbNewRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbNewRequest.request_id)
}
inline void DbNewRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbNewRequest.request_id)
}
inline ::std::string* DbNewRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbNewRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbNewRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.DbNewRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbNewRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbNewRequest.request_id)
}

// -------------------------------------------------------------------

// DbDelRequest

// optional string db_name = 1;
inline void DbDelRequest::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbDelRequest::db_name() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbDelRequest.db_name)
  return db_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbDelRequest::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbDelRequest.db_name)
}
inline void DbDelRequest::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbDelRequest.db_name)
}
inline void DbDelRequest::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbDelRequest.db_name)
}
inline ::std::string* DbDelRequest::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbDelRequest.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbDelRequest::release_db_name() {
  // @@protoc_insertion_point(field_release:faiss_server.DbDelRequest.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbDelRequest::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbDelRequest.db_name)
}

// optional string request_id = 2;
inline void DbDelRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbDelRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbDelRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbDelRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbDelRequest.request_id)
}
inline void DbDelRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbDelRequest.request_id)
}
inline void DbDelRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbDelRequest.request_id)
}
inline ::std::string* DbDelRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbDelRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbDelRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.DbDelRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbDelRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbDelRequest.request_id)
}

// -------------------------------------------------------------------

// EmptyResponse

// optional int64 error_code = 1;
inline void EmptyResponse::clear_error_code() {
  error_code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EmptyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:faiss_server.EmptyResponse.error_code)
  return error_code_;
}
inline void EmptyResponse::set_error_code(::google::protobuf::int64 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.EmptyResponse.error_code)
}

// optional string error_msg = 2;
inline void EmptyResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EmptyResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:faiss_server.EmptyResponse.error_msg)
  return error_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EmptyResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.EmptyResponse.error_msg)
}
inline void EmptyResponse::set_error_msg(const char* value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.EmptyResponse.error_msg)
}
inline void EmptyResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.EmptyResponse.error_msg)
}
inline ::std::string* EmptyResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.EmptyResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EmptyResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:faiss_server.EmptyResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EmptyResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.EmptyResponse.error_msg)
}

// optional string request_id = 3;
inline void EmptyResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EmptyResponse::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.EmptyResponse.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EmptyResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.EmptyResponse.request_id)
}
inline void EmptyResponse::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.EmptyResponse.request_id)
}
inline void EmptyResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.EmptyResponse.request_id)
}
inline ::std::string* EmptyResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.EmptyResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EmptyResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.EmptyResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EmptyResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.EmptyResponse.request_id)
}

// -------------------------------------------------------------------

// DbListRequest

// optional string request_id = 1;
inline void DbListRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbListRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListRequest.request_id)
}
inline void DbListRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListRequest.request_id)
}
inline void DbListRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListRequest.request_id)
}
inline ::std::string* DbListRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbListRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListRequest.request_id)
}

// -------------------------------------------------------------------

// DbListResponse_DbStatus

// optional string name = 1;
inline void DbListResponse_DbStatus::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbListResponse_DbStatus::name() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse_DbStatus::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.name)
}
inline void DbListResponse_DbStatus::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.DbStatus.name)
}
inline void DbListResponse_DbStatus::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.DbStatus.name)
}
inline ::std::string* DbListResponse_DbStatus::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.DbStatus.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbListResponse_DbStatus::release_name() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.DbStatus.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse_DbStatus::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.DbStatus.name)
}

// optional uint64 ntotal = 2;
inline void DbListResponse_DbStatus::clear_ntotal() {
  ntotal_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DbListResponse_DbStatus::ntotal() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.ntotal)
  return ntotal_;
}
inline void DbListResponse_DbStatus::set_ntotal(::google::protobuf::uint64 value) {
  
  ntotal_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.ntotal)
}

// optional uint64 max_size = 3;
inline void DbListResponse_DbStatus::clear_max_size() {
  max_size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DbListResponse_DbStatus::max_size() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.max_size)
  return max_size_;
}
inline void DbListResponse_DbStatus::set_max_size(::google::protobuf::uint64 value) {
  
  max_size_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.max_size)
}

// optional uint64 curr_max_id = 4;
inline void DbListResponse_DbStatus::clear_curr_max_id() {
  curr_max_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DbListResponse_DbStatus::curr_max_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.curr_max_id)
  return curr_max_id_;
}
inline void DbListResponse_DbStatus::set_curr_max_id(::google::protobuf::uint64 value) {
  
  curr_max_id_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.curr_max_id)
}

// optional uint64 curr_persist_max_id = 5;
inline void DbListResponse_DbStatus::clear_curr_persist_max_id() {
  curr_persist_max_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DbListResponse_DbStatus::curr_persist_max_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.curr_persist_max_id)
  return curr_persist_max_id_;
}
inline void DbListResponse_DbStatus::set_curr_persist_max_id(::google::protobuf::uint64 value) {
  
  curr_persist_max_id_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.curr_persist_max_id)
}

// optional string persist_path = 6;
inline void DbListResponse_DbStatus::clear_persist_path() {
  persist_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbListResponse_DbStatus::persist_path() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.persist_path)
  return persist_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse_DbStatus::set_persist_path(const ::std::string& value) {
  
  persist_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.persist_path)
}
inline void DbListResponse_DbStatus::set_persist_path(const char* value) {
  
  persist_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.DbStatus.persist_path)
}
inline void DbListResponse_DbStatus::set_persist_path(const char* value, size_t size) {
  
  persist_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.DbStatus.persist_path)
}
inline ::std::string* DbListResponse_DbStatus::mutable_persist_path() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.DbStatus.persist_path)
  return persist_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbListResponse_DbStatus::release_persist_path() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.DbStatus.persist_path)
  
  return persist_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse_DbStatus::set_allocated_persist_path(::std::string* persist_path) {
  if (persist_path != NULL) {
    
  } else {
    
  }
  persist_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persist_path);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.DbStatus.persist_path)
}

// optional string raw_data_path = 7;
inline void DbListResponse_DbStatus::clear_raw_data_path() {
  raw_data_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbListResponse_DbStatus::raw_data_path() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.raw_data_path)
  return raw_data_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse_DbStatus::set_raw_data_path(const ::std::string& value) {
  
  raw_data_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.raw_data_path)
}
inline void DbListResponse_DbStatus::set_raw_data_path(const char* value) {
  
  raw_data_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.DbStatus.raw_data_path)
}
inline void DbListResponse_DbStatus::set_raw_data_path(const char* value, size_t size) {
  
  raw_data_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.DbStatus.raw_data_path)
}
inline ::std::string* DbListResponse_DbStatus::mutable_raw_data_path() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.DbStatus.raw_data_path)
  return raw_data_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbListResponse_DbStatus::release_raw_data_path() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.DbStatus.raw_data_path)
  
  return raw_data_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse_DbStatus::set_allocated_raw_data_path(::std::string* raw_data_path) {
  if (raw_data_path != NULL) {
    
  } else {
    
  }
  raw_data_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_data_path);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.DbStatus.raw_data_path)
}

// optional uint64 dimension = 8;
inline void DbListResponse_DbStatus::clear_dimension() {
  dimension_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DbListResponse_DbStatus::dimension() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.dimension)
  return dimension_;
}
inline void DbListResponse_DbStatus::set_dimension(::google::protobuf::uint64 value) {
  
  dimension_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.dimension)
}

// optional string model = 9;
inline void DbListResponse_DbStatus::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbListResponse_DbStatus::model() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse_DbStatus::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.model)
}
inline void DbListResponse_DbStatus::set_model(const char* value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.DbStatus.model)
}
inline void DbListResponse_DbStatus::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.DbStatus.model)
}
inline ::std::string* DbListResponse_DbStatus::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.DbStatus.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbListResponse_DbStatus::release_model() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.DbStatus.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse_DbStatus::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.DbStatus.model)
}

// optional uint64 black_list_len = 10;
inline void DbListResponse_DbStatus::clear_black_list_len() {
  black_list_len_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DbListResponse_DbStatus::black_list_len() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.black_list_len)
  return black_list_len_;
}
inline void DbListResponse_DbStatus::set_black_list_len(::google::protobuf::uint64 value) {
  
  black_list_len_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.black_list_len)
}

// -------------------------------------------------------------------

// DbListResponse

// repeated .faiss_server.DbListResponse.DbStatus db_status = 2;
inline int DbListResponse::db_status_size() const {
  return db_status_.size();
}
inline void DbListResponse::clear_db_status() {
  db_status_.Clear();
}
inline const ::faiss_server::DbListResponse_DbStatus& DbListResponse::db_status(int index) const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.db_status)
  return db_status_.Get(index);
}
inline ::faiss_server::DbListResponse_DbStatus* DbListResponse::mutable_db_status(int index) {
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.db_status)
  return db_status_.Mutable(index);
}
inline ::faiss_server::DbListResponse_DbStatus* DbListResponse::add_db_status() {
  // @@protoc_insertion_point(field_add:faiss_server.DbListResponse.db_status)
  return db_status_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::faiss_server::DbListResponse_DbStatus >*
DbListResponse::mutable_db_status() {
  // @@protoc_insertion_point(field_mutable_list:faiss_server.DbListResponse.db_status)
  return &db_status_;
}
inline const ::google::protobuf::RepeatedPtrField< ::faiss_server::DbListResponse_DbStatus >&
DbListResponse::db_status() const {
  // @@protoc_insertion_point(field_list:faiss_server.DbListResponse.db_status)
  return db_status_;
}

// optional int64 error_code = 3;
inline void DbListResponse::clear_error_code() {
  error_code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DbListResponse::error_code() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.error_code)
  return error_code_;
}
inline void DbListResponse::set_error_code(::google::protobuf::int64 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.error_code)
}

// optional string error_msg = 4;
inline void DbListResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbListResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.error_msg)
  return error_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.error_msg)
}
inline void DbListResponse::set_error_msg(const char* value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.error_msg)
}
inline void DbListResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.error_msg)
}
inline ::std::string* DbListResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbListResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.error_msg)
}

// optional string request_id = 5;
inline void DbListResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DbListResponse::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.request_id)
}
inline void DbListResponse::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.request_id)
}
inline void DbListResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.request_id)
}
inline ::std::string* DbListResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DbListResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DbListResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.request_id)
}

// -------------------------------------------------------------------

// HGetDelRequest

// optional string db_name = 1;
inline void HGetDelRequest::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HGetDelRequest::db_name() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetDelRequest.db_name)
  return db_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HGetDelRequest::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HGetDelRequest.db_name)
}
inline void HGetDelRequest::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HGetDelRequest.db_name)
}
inline void HGetDelRequest::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HGetDelRequest.db_name)
}
inline ::std::string* HGetDelRequest::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HGetDelRequest.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HGetDelRequest::release_db_name() {
  // @@protoc_insertion_point(field_release:faiss_server.HGetDelRequest.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HGetDelRequest::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HGetDelRequest.db_name)
}

// optional uint64 id = 3;
inline void HGetDelRequest::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HGetDelRequest::id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetDelRequest.id)
  return id_;
}
inline void HGetDelRequest::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HGetDelRequest.id)
}

// optional string request_id = 4;
inline void HGetDelRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HGetDelRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetDelRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HGetDelRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HGetDelRequest.request_id)
}
inline void HGetDelRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HGetDelRequest.request_id)
}
inline void HGetDelRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HGetDelRequest.request_id)
}
inline ::std::string* HGetDelRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HGetDelRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HGetDelRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HGetDelRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HGetDelRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HGetDelRequest.request_id)
}

// -------------------------------------------------------------------

// HGetResponse

// optional bytes feature = 2;
inline void HGetResponse::clear_feature() {
  feature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HGetResponse::feature() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetResponse.feature)
  return feature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HGetResponse::set_feature(const ::std::string& value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HGetResponse.feature)
}
inline void HGetResponse::set_feature(const char* value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HGetResponse.feature)
}
inline void HGetResponse::set_feature(const void* value, size_t size) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HGetResponse.feature)
}
inline ::std::string* HGetResponse::mutable_feature() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HGetResponse.feature)
  return feature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HGetResponse::release_feature() {
  // @@protoc_insertion_point(field_release:faiss_server.HGetResponse.feature)
  
  return feature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HGetResponse::set_allocated_feature(::std::string* feature) {
  if (feature != NULL) {
    
  } else {
    
  }
  feature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feature);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HGetResponse.feature)
}

// optional uint64 dimension = 5;
inline void HGetResponse::clear_dimension() {
  dimension_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HGetResponse::dimension() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetResponse.dimension)
  return dimension_;
}
inline void HGetResponse::set_dimension(::google::protobuf::uint64 value) {
  
  dimension_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HGetResponse.dimension)
}

// optional string request_id = 6;
inline void HGetResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HGetResponse::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetResponse.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HGetResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HGetResponse.request_id)
}
inline void HGetResponse::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HGetResponse.request_id)
}
inline void HGetResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HGetResponse.request_id)
}
inline ::std::string* HGetResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HGetResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HGetResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HGetResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HGetResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HGetResponse.request_id)
}

// optional int64 error_code = 7;
inline void HGetResponse::clear_error_code() {
  error_code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HGetResponse::error_code() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetResponse.error_code)
  return error_code_;
}
inline void HGetResponse::set_error_code(::google::protobuf::int64 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HGetResponse.error_code)
}

// optional string error_msg = 8;
inline void HGetResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HGetResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetResponse.error_msg)
  return error_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HGetResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HGetResponse.error_msg)
}
inline void HGetResponse::set_error_msg(const char* value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HGetResponse.error_msg)
}
inline void HGetResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HGetResponse.error_msg)
}
inline ::std::string* HGetResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HGetResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HGetResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:faiss_server.HGetResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HGetResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HGetResponse.error_msg)
}

// -------------------------------------------------------------------

// HSetRequest

// optional string db_name = 1;
inline void HSetRequest::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HSetRequest::db_name() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetRequest.db_name)
  return db_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSetRequest::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSetRequest.db_name)
}
inline void HSetRequest::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSetRequest.db_name)
}
inline void HSetRequest::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSetRequest.db_name)
}
inline ::std::string* HSetRequest::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSetRequest.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HSetRequest::release_db_name() {
  // @@protoc_insertion_point(field_release:faiss_server.HSetRequest.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSetRequest::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSetRequest.db_name)
}

// optional bytes feature = 3;
inline void HSetRequest::clear_feature() {
  feature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HSetRequest::feature() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetRequest.feature)
  return feature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSetRequest::set_feature(const ::std::string& value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSetRequest.feature)
}
inline void HSetRequest::set_feature(const char* value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSetRequest.feature)
}
inline void HSetRequest::set_feature(const void* value, size_t size) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSetRequest.feature)
}
inline ::std::string* HSetRequest::mutable_feature() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSetRequest.feature)
  return feature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HSetRequest::release_feature() {
  // @@protoc_insertion_point(field_release:faiss_server.HSetRequest.feature)
  
  return feature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSetRequest::set_allocated_feature(::std::string* feature) {
  if (feature != NULL) {
    
  } else {
    
  }
  feature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feature);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSetRequest.feature)
}

// optional string request_id = 7;
inline void HSetRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HSetRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSetRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSetRequest.request_id)
}
inline void HSetRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSetRequest.request_id)
}
inline void HSetRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSetRequest.request_id)
}
inline ::std::string* HSetRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSetRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HSetRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HSetRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSetRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSetRequest.request_id)
}

// -------------------------------------------------------------------

// HSetResponse

// optional uint64 id = 1;
inline void HSetResponse::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HSetResponse::id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetResponse.id)
  return id_;
}
inline void HSetResponse::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSetResponse.id)
}

// optional string request_id = 2;
inline void HSetResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HSetResponse::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetResponse.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSetResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSetResponse.request_id)
}
inline void HSetResponse::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSetResponse.request_id)
}
inline void HSetResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSetResponse.request_id)
}
inline ::std::string* HSetResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSetResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HSetResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HSetResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSetResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSetResponse.request_id)
}

// optional int64 error_code = 3;
inline void HSetResponse::clear_error_code() {
  error_code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HSetResponse::error_code() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetResponse.error_code)
  return error_code_;
}
inline void HSetResponse::set_error_code(::google::protobuf::int64 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSetResponse.error_code)
}

// optional string error_msg = 4;
inline void HSetResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HSetResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetResponse.error_msg)
  return error_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSetResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSetResponse.error_msg)
}
inline void HSetResponse::set_error_msg(const char* value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSetResponse.error_msg)
}
inline void HSetResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSetResponse.error_msg)
}
inline ::std::string* HSetResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSetResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HSetResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:faiss_server.HSetResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSetResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSetResponse.error_msg)
}

// -------------------------------------------------------------------

// HSearchRequest

// optional string db_name = 1;
inline void HSearchRequest::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HSearchRequest::db_name() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchRequest.db_name)
  return db_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSearchRequest::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSearchRequest.db_name)
}
inline void HSearchRequest::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSearchRequest.db_name)
}
inline void HSearchRequest::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSearchRequest.db_name)
}
inline ::std::string* HSearchRequest::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchRequest.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HSearchRequest::release_db_name() {
  // @@protoc_insertion_point(field_release:faiss_server.HSearchRequest.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSearchRequest::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSearchRequest.db_name)
}

// optional bytes feature = 2;
inline void HSearchRequest::clear_feature() {
  feature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HSearchRequest::feature() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchRequest.feature)
  return feature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSearchRequest::set_feature(const ::std::string& value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSearchRequest.feature)
}
inline void HSearchRequest::set_feature(const char* value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSearchRequest.feature)
}
inline void HSearchRequest::set_feature(const void* value, size_t size) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSearchRequest.feature)
}
inline ::std::string* HSearchRequest::mutable_feature() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchRequest.feature)
  return feature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HSearchRequest::release_feature() {
  // @@protoc_insertion_point(field_release:faiss_server.HSearchRequest.feature)
  
  return feature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSearchRequest::set_allocated_feature(::std::string* feature) {
  if (feature != NULL) {
    
  } else {
    
  }
  feature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feature);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSearchRequest.feature)
}

// optional uint64 top_k = 3;
inline void HSearchRequest::clear_top_k() {
  top_k_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HSearchRequest::top_k() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchRequest.top_k)
  return top_k_;
}
inline void HSearchRequest::set_top_k(::google::protobuf::uint64 value) {
  
  top_k_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSearchRequest.top_k)
}

// optional .faiss_server.HSearchRequest.DistanceType distance_type = 9;
inline void HSearchRequest::clear_distance_type() {
  distance_type_ = 0;
}
inline ::faiss_server::HSearchRequest_DistanceType HSearchRequest::distance_type() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchRequest.distance_type)
  return static_cast< ::faiss_server::HSearchRequest_DistanceType >(distance_type_);
}
inline void HSearchRequest::set_distance_type(::faiss_server::HSearchRequest_DistanceType value) {
  
  distance_type_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSearchRequest.distance_type)
}

// optional string request_id = 10;
inline void HSearchRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HSearchRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSearchRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSearchRequest.request_id)
}
inline void HSearchRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSearchRequest.request_id)
}
inline void HSearchRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSearchRequest.request_id)
}
inline ::std::string* HSearchRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HSearchRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HSearchRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSearchRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSearchRequest.request_id)
}

// -------------------------------------------------------------------

// HSearchResponse_Result

// optional float score = 2;
inline void HSearchResponse_Result::clear_score() {
  score_ = 0;
}
inline float HSearchResponse_Result::score() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.Result.score)
  return score_;
}
inline void HSearchResponse_Result::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSearchResponse.Result.score)
}

// optional uint64 id = 3;
inline void HSearchResponse_Result::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HSearchResponse_Result::id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.Result.id)
  return id_;
}
inline void HSearchResponse_Result::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSearchResponse.Result.id)
}

// -------------------------------------------------------------------

// HSearchResponse

// repeated .faiss_server.HSearchResponse.Result results = 1;
inline int HSearchResponse::results_size() const {
  return results_.size();
}
inline void HSearchResponse::clear_results() {
  results_.Clear();
}
inline const ::faiss_server::HSearchResponse_Result& HSearchResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.results)
  return results_.Get(index);
}
inline ::faiss_server::HSearchResponse_Result* HSearchResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchResponse.results)
  return results_.Mutable(index);
}
inline ::faiss_server::HSearchResponse_Result* HSearchResponse::add_results() {
  // @@protoc_insertion_point(field_add:faiss_server.HSearchResponse.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::faiss_server::HSearchResponse_Result >*
HSearchResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:faiss_server.HSearchResponse.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::faiss_server::HSearchResponse_Result >&
HSearchResponse::results() const {
  // @@protoc_insertion_point(field_list:faiss_server.HSearchResponse.results)
  return results_;
}

// optional string request_id = 2;
inline void HSearchResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HSearchResponse::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSearchResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSearchResponse.request_id)
}
inline void HSearchResponse::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSearchResponse.request_id)
}
inline void HSearchResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSearchResponse.request_id)
}
inline ::std::string* HSearchResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HSearchResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HSearchResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSearchResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSearchResponse.request_id)
}

// optional int64 error_code = 3;
inline void HSearchResponse::clear_error_code() {
  error_code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HSearchResponse::error_code() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.error_code)
  return error_code_;
}
inline void HSearchResponse::set_error_code(::google::protobuf::int64 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSearchResponse.error_code)
}

// optional string error_msg = 4;
inline void HSearchResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HSearchResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.error_msg)
  return error_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSearchResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSearchResponse.error_msg)
}
inline void HSearchResponse::set_error_msg(const char* value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSearchResponse.error_msg)
}
inline void HSearchResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSearchResponse.error_msg)
}
inline ::std::string* HSearchResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HSearchResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:faiss_server.HSearchResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HSearchResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSearchResponse.error_msg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace faiss_server

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::faiss_server::HSearchRequest_DistanceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::faiss_server::HSearchRequest_DistanceType>() {
  return ::faiss_server::HSearchRequest_DistanceType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_faiss_5fdef_2eproto__INCLUDED

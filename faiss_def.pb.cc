// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: faiss_def.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "faiss_def.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace faiss_server {

namespace {

const ::google::protobuf::Descriptor* PingRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PingRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PingResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PingResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DbNewRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DbNewRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DbDelRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DbDelRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* EmptyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmptyResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DbListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DbListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DbListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DbListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DbListResponse_DbStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DbListResponse_DbStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* HGetDelRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HGetDelRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* HGetResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HGetResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* HSetRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HSetRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* HSetResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HSetResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* HSearchRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HSearchRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* HSearchRequest_DistanceType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* HSearchResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HSearchResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* HSearchResponse_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HSearchResponse_Result_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_faiss_5fdef_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_faiss_5fdef_2eproto() {
  protobuf_AddDesc_faiss_5fdef_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "faiss_def.proto");
  GOOGLE_CHECK(file != NULL);
  PingRequest_descriptor_ = file->message_type(0);
  static const int PingRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRequest, payload_),
  };
  PingRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PingRequest_descriptor_,
      PingRequest::default_instance_,
      PingRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PingRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRequest, _is_default_instance_));
  PingResponse_descriptor_ = file->message_type(1);
  static const int PingResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingResponse, payload_),
  };
  PingResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PingResponse_descriptor_,
      PingResponse::default_instance_,
      PingResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(PingResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingResponse, _is_default_instance_));
  DbNewRequest_descriptor_ = file->message_type(2);
  static const int DbNewRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbNewRequest, db_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbNewRequest, max_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbNewRequest, model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbNewRequest, request_id_),
  };
  DbNewRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DbNewRequest_descriptor_,
      DbNewRequest::default_instance_,
      DbNewRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DbNewRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbNewRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbNewRequest, _is_default_instance_));
  DbDelRequest_descriptor_ = file->message_type(3);
  static const int DbDelRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbDelRequest, db_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbDelRequest, request_id_),
  };
  DbDelRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DbDelRequest_descriptor_,
      DbDelRequest::default_instance_,
      DbDelRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DbDelRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbDelRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbDelRequest, _is_default_instance_));
  EmptyResponse_descriptor_ = file->message_type(4);
  static const int EmptyResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyResponse, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyResponse, error_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyResponse, request_id_),
  };
  EmptyResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EmptyResponse_descriptor_,
      EmptyResponse::default_instance_,
      EmptyResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(EmptyResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyResponse, _is_default_instance_));
  DbListRequest_descriptor_ = file->message_type(5);
  static const int DbListRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListRequest, request_id_),
  };
  DbListRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DbListRequest_descriptor_,
      DbListRequest::default_instance_,
      DbListRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DbListRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListRequest, _is_default_instance_));
  DbListResponse_descriptor_ = file->message_type(6);
  static const int DbListResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse, db_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse, error_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse, request_id_),
  };
  DbListResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DbListResponse_descriptor_,
      DbListResponse::default_instance_,
      DbListResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(DbListResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse, _is_default_instance_));
  DbListResponse_DbStatus_descriptor_ = DbListResponse_descriptor_->nested_type(0);
  static const int DbListResponse_DbStatus_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, ntotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, max_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, curr_max_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, curr_persist_max_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, persist_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, raw_data_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, dimension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, black_list_len_),
  };
  DbListResponse_DbStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DbListResponse_DbStatus_descriptor_,
      DbListResponse_DbStatus::default_instance_,
      DbListResponse_DbStatus_offsets_,
      -1,
      -1,
      -1,
      sizeof(DbListResponse_DbStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DbListResponse_DbStatus, _is_default_instance_));
  HGetDelRequest_descriptor_ = file->message_type(7);
  static const int HGetDelRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetDelRequest, db_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetDelRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetDelRequest, request_id_),
  };
  HGetDelRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HGetDelRequest_descriptor_,
      HGetDelRequest::default_instance_,
      HGetDelRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(HGetDelRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetDelRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetDelRequest, _is_default_instance_));
  HGetResponse_descriptor_ = file->message_type(8);
  static const int HGetResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetResponse, feature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetResponse, dimension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetResponse, request_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetResponse, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetResponse, error_msg_),
  };
  HGetResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HGetResponse_descriptor_,
      HGetResponse::default_instance_,
      HGetResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(HGetResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HGetResponse, _is_default_instance_));
  HSetRequest_descriptor_ = file->message_type(9);
  static const int HSetRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSetRequest, db_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSetRequest, feature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSetRequest, request_id_),
  };
  HSetRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HSetRequest_descriptor_,
      HSetRequest::default_instance_,
      HSetRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(HSetRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSetRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSetRequest, _is_default_instance_));
  HSetResponse_descriptor_ = file->message_type(10);
  static const int HSetResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSetResponse, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSetResponse, request_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSetResponse, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSetResponse, error_msg_),
  };
  HSetResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HSetResponse_descriptor_,
      HSetResponse::default_instance_,
      HSetResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(HSetResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSetResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSetResponse, _is_default_instance_));
  HSearchRequest_descriptor_ = file->message_type(11);
  static const int HSearchRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchRequest, db_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchRequest, feature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchRequest, top_k_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchRequest, distance_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchRequest, request_id_),
  };
  HSearchRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HSearchRequest_descriptor_,
      HSearchRequest::default_instance_,
      HSearchRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(HSearchRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchRequest, _is_default_instance_));
  HSearchRequest_DistanceType_descriptor_ = HSearchRequest_descriptor_->enum_type(0);
  HSearchResponse_descriptor_ = file->message_type(12);
  static const int HSearchResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchResponse, results_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchResponse, request_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchResponse, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchResponse, error_msg_),
  };
  HSearchResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HSearchResponse_descriptor_,
      HSearchResponse::default_instance_,
      HSearchResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(HSearchResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchResponse, _is_default_instance_));
  HSearchResponse_Result_descriptor_ = HSearchResponse_descriptor_->nested_type(0);
  static const int HSearchResponse_Result_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchResponse_Result, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchResponse_Result, id_),
  };
  HSearchResponse_Result_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HSearchResponse_Result_descriptor_,
      HSearchResponse_Result::default_instance_,
      HSearchResponse_Result_offsets_,
      -1,
      -1,
      -1,
      sizeof(HSearchResponse_Result),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchResponse_Result, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HSearchResponse_Result, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_faiss_5fdef_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PingRequest_descriptor_, &PingRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PingResponse_descriptor_, &PingResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DbNewRequest_descriptor_, &DbNewRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DbDelRequest_descriptor_, &DbDelRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EmptyResponse_descriptor_, &EmptyResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DbListRequest_descriptor_, &DbListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DbListResponse_descriptor_, &DbListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DbListResponse_DbStatus_descriptor_, &DbListResponse_DbStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HGetDelRequest_descriptor_, &HGetDelRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HGetResponse_descriptor_, &HGetResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HSetRequest_descriptor_, &HSetRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HSetResponse_descriptor_, &HSetResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HSearchRequest_descriptor_, &HSearchRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HSearchResponse_descriptor_, &HSearchResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HSearchResponse_Result_descriptor_, &HSearchResponse_Result::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_faiss_5fdef_2eproto() {
  delete PingRequest::default_instance_;
  delete PingRequest_reflection_;
  delete PingResponse::default_instance_;
  delete PingResponse_reflection_;
  delete DbNewRequest::default_instance_;
  delete DbNewRequest_reflection_;
  delete DbDelRequest::default_instance_;
  delete DbDelRequest_reflection_;
  delete EmptyResponse::default_instance_;
  delete EmptyResponse_reflection_;
  delete DbListRequest::default_instance_;
  delete DbListRequest_reflection_;
  delete DbListResponse::default_instance_;
  delete DbListResponse_reflection_;
  delete DbListResponse_DbStatus::default_instance_;
  delete DbListResponse_DbStatus_reflection_;
  delete HGetDelRequest::default_instance_;
  delete HGetDelRequest_reflection_;
  delete HGetResponse::default_instance_;
  delete HGetResponse_reflection_;
  delete HSetRequest::default_instance_;
  delete HSetRequest_reflection_;
  delete HSetResponse::default_instance_;
  delete HSetResponse_reflection_;
  delete HSearchRequest::default_instance_;
  delete HSearchRequest_reflection_;
  delete HSearchResponse::default_instance_;
  delete HSearchResponse_reflection_;
  delete HSearchResponse_Result::default_instance_;
  delete HSearchResponse_Result_reflection_;
}

void protobuf_AddDesc_faiss_5fdef_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_faiss_5fdef_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017faiss_def.proto\022\014faiss_server\"\036\n\013PingR"
    "equest\022\017\n\007payload\030\001 \001(\t\"\037\n\014PingResponse\022"
    "\017\n\007payload\030\001 \001(\t\"T\n\014DbNewRequest\022\017\n\007db_n"
    "ame\030\001 \001(\t\022\020\n\010max_size\030\002 \001(\004\022\r\n\005model\030\003 \001"
    "(\t\022\022\n\nrequest_id\030\004 \001(\t\"3\n\014DbDelRequest\022\017"
    "\n\007db_name\030\001 \001(\t\022\022\n\nrequest_id\030\002 \001(\t\"J\n\rE"
    "mptyResponse\022\022\n\nerror_code\030\001 \001(\003\022\021\n\terro"
    "r_msg\030\002 \001(\t\022\022\n\nrequest_id\030\003 \001(\t\"#\n\rDbLis"
    "tRequest\022\022\n\nrequest_id\030\001 \001(\t\"\333\002\n\016DbListR"
    "esponse\0228\n\tdb_status\030\002 \003(\0132%.faiss_serve"
    "r.DbListResponse.DbStatus\022\022\n\nerror_code\030"
    "\003 \001(\003\022\021\n\terror_msg\030\004 \001(\t\022\022\n\nrequest_id\030\005"
    " \001(\t\032\323\001\n\010DbStatus\022\014\n\004name\030\001 \001(\t\022\016\n\006ntota"
    "l\030\002 \001(\004\022\020\n\010max_size\030\003 \001(\004\022\023\n\013curr_max_id"
    "\030\004 \001(\004\022\033\n\023curr_persist_max_id\030\005 \001(\004\022\024\n\014p"
    "ersist_path\030\006 \001(\t\022\025\n\rraw_data_path\030\007 \001(\t"
    "\022\021\n\tdimension\030\010 \001(\004\022\r\n\005model\030\t \001(\t\022\026\n\016bl"
    "ack_list_len\030\n \001(\004\"A\n\016HGetDelRequest\022\017\n\007"
    "db_name\030\001 \001(\t\022\n\n\002id\030\003 \001(\004\022\022\n\nrequest_id\030"
    "\004 \001(\t\"m\n\014HGetResponse\022\017\n\007feature\030\002 \001(\014\022\021"
    "\n\tdimension\030\005 \001(\004\022\022\n\nrequest_id\030\006 \001(\t\022\022\n"
    "\nerror_code\030\007 \001(\003\022\021\n\terror_msg\030\010 \001(\t\"C\n\013"
    "HSetRequest\022\017\n\007db_name\030\001 \001(\t\022\017\n\007feature\030"
    "\003 \001(\014\022\022\n\nrequest_id\030\007 \001(\t\"U\n\014HSetRespons"
    "e\022\n\n\002id\030\001 \001(\004\022\022\n\nrequest_id\030\002 \001(\t\022\022\n\nerr"
    "or_code\030\003 \001(\003\022\021\n\terror_msg\030\004 \001(\t\"\277\001\n\016HSe"
    "archRequest\022\017\n\007db_name\030\001 \001(\t\022\017\n\007feature\030"
    "\002 \001(\014\022\r\n\005top_k\030\003 \001(\004\022@\n\rdistance_type\030\t "
    "\001(\0162).faiss_server.HSearchRequest.Distan"
    "ceType\022\022\n\nrequest_id\030\n \001(\t\"&\n\014DistanceTy"
    "pe\022\n\n\006Euclid\020\000\022\n\n\006Cosine\020\001\"\250\001\n\017HSearchRe"
    "sponse\0225\n\007results\030\001 \003(\0132$.faiss_server.H"
    "SearchResponse.Result\022\022\n\nrequest_id\030\002 \001("
    "\t\022\022\n\nerror_code\030\003 \001(\003\022\021\n\terror_msg\030\004 \001(\t"
    "\032#\n\006Result\022\r\n\005score\030\002 \001(\002\022\n\n\002id\030\003 \001(\0042\242\004"
    "\n\014FaissService\022=\n\004Ping\022\031.faiss_server.Pi"
    "ngRequest\032\032.faiss_server.PingResponse\022@\n"
    "\005DbNew\022\032.faiss_server.DbNewRequest\032\033.fai"
    "ss_server.EmptyResponse\022@\n\005DbDel\022\032.faiss"
    "_server.DbDelRequest\032\033.faiss_server.Empt"
    "yResponse\022C\n\006DbList\022\033.faiss_server.DbLis"
    "tRequest\032\034.faiss_server.DbListResponse\022="
    "\n\004HSet\022\031.faiss_server.HSetRequest\032\032.fais"
    "s_server.HSetResponse\022A\n\004HDel\022\034.faiss_se"
    "rver.HGetDelRequest\032\033.faiss_server.Empty"
    "Response\022@\n\004HGet\022\034.faiss_server.HGetDelR"
    "equest\032\032.faiss_server.HGetResponse\022F\n\007HS"
    "earch\022\034.faiss_server.HSearchRequest\032\035.fa"
    "iss_server.HSearchResponseb\006proto3", 1954);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "faiss_def.proto", &protobuf_RegisterTypes);
  PingRequest::default_instance_ = new PingRequest();
  PingResponse::default_instance_ = new PingResponse();
  DbNewRequest::default_instance_ = new DbNewRequest();
  DbDelRequest::default_instance_ = new DbDelRequest();
  EmptyResponse::default_instance_ = new EmptyResponse();
  DbListRequest::default_instance_ = new DbListRequest();
  DbListResponse::default_instance_ = new DbListResponse();
  DbListResponse_DbStatus::default_instance_ = new DbListResponse_DbStatus();
  HGetDelRequest::default_instance_ = new HGetDelRequest();
  HGetResponse::default_instance_ = new HGetResponse();
  HSetRequest::default_instance_ = new HSetRequest();
  HSetResponse::default_instance_ = new HSetResponse();
  HSearchRequest::default_instance_ = new HSearchRequest();
  HSearchResponse::default_instance_ = new HSearchResponse();
  HSearchResponse_Result::default_instance_ = new HSearchResponse_Result();
  PingRequest::default_instance_->InitAsDefaultInstance();
  PingResponse::default_instance_->InitAsDefaultInstance();
  DbNewRequest::default_instance_->InitAsDefaultInstance();
  DbDelRequest::default_instance_->InitAsDefaultInstance();
  EmptyResponse::default_instance_->InitAsDefaultInstance();
  DbListRequest::default_instance_->InitAsDefaultInstance();
  DbListResponse::default_instance_->InitAsDefaultInstance();
  DbListResponse_DbStatus::default_instance_->InitAsDefaultInstance();
  HGetDelRequest::default_instance_->InitAsDefaultInstance();
  HGetResponse::default_instance_->InitAsDefaultInstance();
  HSetRequest::default_instance_->InitAsDefaultInstance();
  HSetResponse::default_instance_->InitAsDefaultInstance();
  HSearchRequest::default_instance_->InitAsDefaultInstance();
  HSearchResponse::default_instance_->InitAsDefaultInstance();
  HSearchResponse_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_faiss_5fdef_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_faiss_5fdef_2eproto {
  StaticDescriptorInitializer_faiss_5fdef_2eproto() {
    protobuf_AddDesc_faiss_5fdef_2eproto();
  }
} static_descriptor_initializer_faiss_5fdef_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingRequest::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingRequest::PingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.PingRequest)
}

void PingRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PingRequest::PingRequest(const PingRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.PingRequest)
}

void PingRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:faiss_server.PingRequest)
  SharedDtor();
}

void PingRequest::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PingRequest_descriptor_;
}

const PingRequest& PingRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

PingRequest* PingRequest::default_instance_ = NULL;

PingRequest* PingRequest::New(::google::protobuf::Arena* arena) const {
  PingRequest* n = new PingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.PingRequest)
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.PingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string payload = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payload()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payload().data(), this->payload().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.PingRequest.payload"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.PingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.PingRequest)
  return false;
#undef DO_
}

void PingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.PingRequest)
  // optional string payload = 1;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payload().data(), this->payload().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.PingRequest.payload");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->payload(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.PingRequest)
}

::google::protobuf::uint8* PingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.PingRequest)
  // optional string payload = 1;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payload().data(), this->payload().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.PingRequest.payload");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->payload(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.PingRequest)
  return target;
}

int PingRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.PingRequest)
  int total_size = 0;

  // optional string payload = 1;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payload());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.PingRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PingRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.PingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.PingRequest)
    MergeFrom(*source);
  }
}

void PingRequest::MergeFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.PingRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
}

void PingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRequest::IsInitialized() const {

  return true;
}

void PingRequest::Swap(PingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingRequest::InternalSwap(PingRequest* other) {
  payload_.Swap(&other->payload_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PingRequest_descriptor_;
  metadata.reflection = PingRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingRequest

// optional string payload = 1;
void PingRequest::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PingRequest::payload() const {
  // @@protoc_insertion_point(field_get:faiss_server.PingRequest.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PingRequest::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.PingRequest.payload)
}
 void PingRequest::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.PingRequest.payload)
}
 void PingRequest::set_payload(const char* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.PingRequest.payload)
}
 ::std::string* PingRequest::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.PingRequest.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PingRequest::release_payload() {
  // @@protoc_insertion_point(field_release:faiss_server.PingRequest.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PingRequest::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.PingRequest.payload)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingResponse::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingResponse::PingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.PingResponse)
}

void PingResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PingResponse::PingResponse(const PingResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.PingResponse)
}

void PingResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PingResponse::~PingResponse() {
  // @@protoc_insertion_point(destructor:faiss_server.PingResponse)
  SharedDtor();
}

void PingResponse::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PingResponse_descriptor_;
}

const PingResponse& PingResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

PingResponse* PingResponse::default_instance_ = NULL;

PingResponse* PingResponse::New(::google::protobuf::Arena* arena) const {
  PingResponse* n = new PingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.PingResponse)
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.PingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string payload = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payload()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payload().data(), this->payload().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.PingResponse.payload"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.PingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.PingResponse)
  return false;
#undef DO_
}

void PingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.PingResponse)
  // optional string payload = 1;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payload().data(), this->payload().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.PingResponse.payload");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->payload(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.PingResponse)
}

::google::protobuf::uint8* PingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.PingResponse)
  // optional string payload = 1;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payload().data(), this->payload().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.PingResponse.payload");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->payload(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.PingResponse)
  return target;
}

int PingResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.PingResponse)
  int total_size = 0;

  // optional string payload = 1;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payload());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.PingResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PingResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.PingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.PingResponse)
    MergeFrom(*source);
  }
}

void PingResponse::MergeFrom(const PingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.PingResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
}

void PingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingResponse::CopyFrom(const PingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingResponse::IsInitialized() const {

  return true;
}

void PingResponse::Swap(PingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingResponse::InternalSwap(PingResponse* other) {
  payload_.Swap(&other->payload_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PingResponse_descriptor_;
  metadata.reflection = PingResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingResponse

// optional string payload = 1;
void PingResponse::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PingResponse::payload() const {
  // @@protoc_insertion_point(field_get:faiss_server.PingResponse.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PingResponse::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.PingResponse.payload)
}
 void PingResponse::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.PingResponse.payload)
}
 void PingResponse::set_payload(const char* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.PingResponse.payload)
}
 ::std::string* PingResponse::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.PingResponse.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PingResponse::release_payload() {
  // @@protoc_insertion_point(field_release:faiss_server.PingResponse.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PingResponse::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.PingResponse.payload)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbNewRequest::kDbNameFieldNumber;
const int DbNewRequest::kMaxSizeFieldNumber;
const int DbNewRequest::kModelFieldNumber;
const int DbNewRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbNewRequest::DbNewRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.DbNewRequest)
}

void DbNewRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DbNewRequest::DbNewRequest(const DbNewRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.DbNewRequest)
}

void DbNewRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_size_ = GOOGLE_ULONGLONG(0);
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DbNewRequest::~DbNewRequest() {
  // @@protoc_insertion_point(destructor:faiss_server.DbNewRequest)
  SharedDtor();
}

void DbNewRequest::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DbNewRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DbNewRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DbNewRequest_descriptor_;
}

const DbNewRequest& DbNewRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

DbNewRequest* DbNewRequest::default_instance_ = NULL;

DbNewRequest* DbNewRequest::New(::google::protobuf::Arena* arena) const {
  DbNewRequest* n = new DbNewRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DbNewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.DbNewRequest)
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_size_ = GOOGLE_ULONGLONG(0);
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DbNewRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.DbNewRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), this->db_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbNewRequest.db_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_max_size;
        break;
      }

      // optional uint64 max_size = 2;
      case 2: {
        if (tag == 16) {
         parse_max_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_model;
        break;
      }

      // optional string model = 3;
      case 3: {
        if (tag == 26) {
         parse_model:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model().data(), this->model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbNewRequest.model"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_request_id;
        break;
      }

      // optional string request_id = 4;
      case 4: {
        if (tag == 34) {
         parse_request_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbNewRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.DbNewRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.DbNewRequest)
  return false;
#undef DO_
}

void DbNewRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.DbNewRequest)
  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), this->db_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbNewRequest.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // optional uint64 max_size = 2;
  if (this->max_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->max_size(), output);
  }

  // optional string model = 3;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbNewRequest.model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->model(), output);
  }

  // optional string request_id = 4;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbNewRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->request_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.DbNewRequest)
}

::google::protobuf::uint8* DbNewRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.DbNewRequest)
  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), this->db_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbNewRequest.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // optional uint64 max_size = 2;
  if (this->max_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->max_size(), target);
  }

  // optional string model = 3;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbNewRequest.model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->model(), target);
  }

  // optional string request_id = 4;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbNewRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->request_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.DbNewRequest)
  return target;
}

int DbNewRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.DbNewRequest)
  int total_size = 0;

  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // optional uint64 max_size = 2;
  if (this->max_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_size());
  }

  // optional string model = 3;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());
  }

  // optional string request_id = 4;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DbNewRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.DbNewRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DbNewRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DbNewRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.DbNewRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.DbNewRequest)
    MergeFrom(*source);
  }
}

void DbNewRequest::MergeFrom(const DbNewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.DbNewRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.max_size() != 0) {
    set_max_size(from.max_size());
  }
  if (from.model().size() > 0) {

    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
}

void DbNewRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.DbNewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DbNewRequest::CopyFrom(const DbNewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.DbNewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbNewRequest::IsInitialized() const {

  return true;
}

void DbNewRequest::Swap(DbNewRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DbNewRequest::InternalSwap(DbNewRequest* other) {
  db_name_.Swap(&other->db_name_);
  std::swap(max_size_, other->max_size_);
  model_.Swap(&other->model_);
  request_id_.Swap(&other->request_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DbNewRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DbNewRequest_descriptor_;
  metadata.reflection = DbNewRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DbNewRequest

// optional string db_name = 1;
void DbNewRequest::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbNewRequest::db_name() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbNewRequest.db_name)
  return db_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbNewRequest::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbNewRequest.db_name)
}
 void DbNewRequest::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbNewRequest.db_name)
}
 void DbNewRequest::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbNewRequest.db_name)
}
 ::std::string* DbNewRequest::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbNewRequest.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbNewRequest::release_db_name() {
  // @@protoc_insertion_point(field_release:faiss_server.DbNewRequest.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbNewRequest::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbNewRequest.db_name)
}

// optional uint64 max_size = 2;
void DbNewRequest::clear_max_size() {
  max_size_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DbNewRequest::max_size() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbNewRequest.max_size)
  return max_size_;
}
 void DbNewRequest::set_max_size(::google::protobuf::uint64 value) {
  
  max_size_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbNewRequest.max_size)
}

// optional string model = 3;
void DbNewRequest::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbNewRequest::model() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbNewRequest.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbNewRequest::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbNewRequest.model)
}
 void DbNewRequest::set_model(const char* value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbNewRequest.model)
}
 void DbNewRequest::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbNewRequest.model)
}
 ::std::string* DbNewRequest::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbNewRequest.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbNewRequest::release_model() {
  // @@protoc_insertion_point(field_release:faiss_server.DbNewRequest.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbNewRequest::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbNewRequest.model)
}

// optional string request_id = 4;
void DbNewRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbNewRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbNewRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbNewRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbNewRequest.request_id)
}
 void DbNewRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbNewRequest.request_id)
}
 void DbNewRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbNewRequest.request_id)
}
 ::std::string* DbNewRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbNewRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbNewRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.DbNewRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbNewRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbNewRequest.request_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbDelRequest::kDbNameFieldNumber;
const int DbDelRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbDelRequest::DbDelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.DbDelRequest)
}

void DbDelRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DbDelRequest::DbDelRequest(const DbDelRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.DbDelRequest)
}

void DbDelRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DbDelRequest::~DbDelRequest() {
  // @@protoc_insertion_point(destructor:faiss_server.DbDelRequest)
  SharedDtor();
}

void DbDelRequest::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DbDelRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DbDelRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DbDelRequest_descriptor_;
}

const DbDelRequest& DbDelRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

DbDelRequest* DbDelRequest::default_instance_ = NULL;

DbDelRequest* DbDelRequest::New(::google::protobuf::Arena* arena) const {
  DbDelRequest* n = new DbDelRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DbDelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.DbDelRequest)
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DbDelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.DbDelRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), this->db_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbDelRequest.db_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_request_id;
        break;
      }

      // optional string request_id = 2;
      case 2: {
        if (tag == 18) {
         parse_request_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbDelRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.DbDelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.DbDelRequest)
  return false;
#undef DO_
}

void DbDelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.DbDelRequest)
  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), this->db_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbDelRequest.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // optional string request_id = 2;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbDelRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->request_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.DbDelRequest)
}

::google::protobuf::uint8* DbDelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.DbDelRequest)
  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), this->db_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbDelRequest.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // optional string request_id = 2;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbDelRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->request_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.DbDelRequest)
  return target;
}

int DbDelRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.DbDelRequest)
  int total_size = 0;

  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // optional string request_id = 2;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DbDelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.DbDelRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DbDelRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DbDelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.DbDelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.DbDelRequest)
    MergeFrom(*source);
  }
}

void DbDelRequest::MergeFrom(const DbDelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.DbDelRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
}

void DbDelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.DbDelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DbDelRequest::CopyFrom(const DbDelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.DbDelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbDelRequest::IsInitialized() const {

  return true;
}

void DbDelRequest::Swap(DbDelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DbDelRequest::InternalSwap(DbDelRequest* other) {
  db_name_.Swap(&other->db_name_);
  request_id_.Swap(&other->request_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DbDelRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DbDelRequest_descriptor_;
  metadata.reflection = DbDelRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DbDelRequest

// optional string db_name = 1;
void DbDelRequest::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbDelRequest::db_name() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbDelRequest.db_name)
  return db_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbDelRequest::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbDelRequest.db_name)
}
 void DbDelRequest::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbDelRequest.db_name)
}
 void DbDelRequest::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbDelRequest.db_name)
}
 ::std::string* DbDelRequest::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbDelRequest.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbDelRequest::release_db_name() {
  // @@protoc_insertion_point(field_release:faiss_server.DbDelRequest.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbDelRequest::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbDelRequest.db_name)
}

// optional string request_id = 2;
void DbDelRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbDelRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbDelRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbDelRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbDelRequest.request_id)
}
 void DbDelRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbDelRequest.request_id)
}
 void DbDelRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbDelRequest.request_id)
}
 ::std::string* DbDelRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbDelRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbDelRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.DbDelRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbDelRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbDelRequest.request_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmptyResponse::kErrorCodeFieldNumber;
const int EmptyResponse::kErrorMsgFieldNumber;
const int EmptyResponse::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmptyResponse::EmptyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.EmptyResponse)
}

void EmptyResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EmptyResponse::EmptyResponse(const EmptyResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.EmptyResponse)
}

void EmptyResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  error_code_ = GOOGLE_LONGLONG(0);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EmptyResponse::~EmptyResponse() {
  // @@protoc_insertion_point(destructor:faiss_server.EmptyResponse)
  SharedDtor();
}

void EmptyResponse::SharedDtor() {
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EmptyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmptyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmptyResponse_descriptor_;
}

const EmptyResponse& EmptyResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

EmptyResponse* EmptyResponse::default_instance_ = NULL;

EmptyResponse* EmptyResponse::New(::google::protobuf::Arena* arena) const {
  EmptyResponse* n = new EmptyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EmptyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.EmptyResponse)
  error_code_ = GOOGLE_LONGLONG(0);
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool EmptyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.EmptyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 error_code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &error_code_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error_msg;
        break;
      }

      // optional string error_msg = 2;
      case 2: {
        if (tag == 18) {
         parse_error_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), this->error_msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.EmptyResponse.error_msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_request_id;
        break;
      }

      // optional string request_id = 3;
      case 3: {
        if (tag == 26) {
         parse_request_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.EmptyResponse.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.EmptyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.EmptyResponse)
  return false;
#undef DO_
}

void EmptyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.EmptyResponse)
  // optional int64 error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->error_code(), output);
  }

  // optional string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), this->error_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.EmptyResponse.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_msg(), output);
  }

  // optional string request_id = 3;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.EmptyResponse.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->request_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.EmptyResponse)
}

::google::protobuf::uint8* EmptyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.EmptyResponse)
  // optional int64 error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->error_code(), target);
  }

  // optional string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), this->error_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.EmptyResponse.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_msg(), target);
  }

  // optional string request_id = 3;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.EmptyResponse.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->request_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.EmptyResponse)
  return target;
}

int EmptyResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.EmptyResponse)
  int total_size = 0;

  // optional int64 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->error_code());
  }

  // optional string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  // optional string request_id = 3;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmptyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.EmptyResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EmptyResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EmptyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.EmptyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.EmptyResponse)
    MergeFrom(*source);
  }
}

void EmptyResponse::MergeFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.EmptyResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
}

void EmptyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyResponse::CopyFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyResponse::IsInitialized() const {

  return true;
}

void EmptyResponse::Swap(EmptyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmptyResponse::InternalSwap(EmptyResponse* other) {
  std::swap(error_code_, other->error_code_);
  error_msg_.Swap(&other->error_msg_);
  request_id_.Swap(&other->request_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmptyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmptyResponse_descriptor_;
  metadata.reflection = EmptyResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EmptyResponse

// optional int64 error_code = 1;
void EmptyResponse::clear_error_code() {
  error_code_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 EmptyResponse::error_code() const {
  // @@protoc_insertion_point(field_get:faiss_server.EmptyResponse.error_code)
  return error_code_;
}
 void EmptyResponse::set_error_code(::google::protobuf::int64 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.EmptyResponse.error_code)
}

// optional string error_msg = 2;
void EmptyResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EmptyResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:faiss_server.EmptyResponse.error_msg)
  return error_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EmptyResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.EmptyResponse.error_msg)
}
 void EmptyResponse::set_error_msg(const char* value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.EmptyResponse.error_msg)
}
 void EmptyResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.EmptyResponse.error_msg)
}
 ::std::string* EmptyResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.EmptyResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EmptyResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:faiss_server.EmptyResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EmptyResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.EmptyResponse.error_msg)
}

// optional string request_id = 3;
void EmptyResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EmptyResponse::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.EmptyResponse.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EmptyResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.EmptyResponse.request_id)
}
 void EmptyResponse::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.EmptyResponse.request_id)
}
 void EmptyResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.EmptyResponse.request_id)
}
 ::std::string* EmptyResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.EmptyResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EmptyResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.EmptyResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EmptyResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.EmptyResponse.request_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbListRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbListRequest::DbListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.DbListRequest)
}

void DbListRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DbListRequest::DbListRequest(const DbListRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.DbListRequest)
}

void DbListRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DbListRequest::~DbListRequest() {
  // @@protoc_insertion_point(destructor:faiss_server.DbListRequest)
  SharedDtor();
}

void DbListRequest::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DbListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DbListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DbListRequest_descriptor_;
}

const DbListRequest& DbListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

DbListRequest* DbListRequest::default_instance_ = NULL;

DbListRequest* DbListRequest::New(::google::protobuf::Arena* arena) const {
  DbListRequest* n = new DbListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DbListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.DbListRequest)
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool DbListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.DbListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string request_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbListRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.DbListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.DbListRequest)
  return false;
#undef DO_
}

void DbListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.DbListRequest)
  // optional string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.DbListRequest)
}

::google::protobuf::uint8* DbListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.DbListRequest)
  // optional string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.DbListRequest)
  return target;
}

int DbListRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.DbListRequest)
  int total_size = 0;

  // optional string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DbListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.DbListRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DbListRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DbListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.DbListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.DbListRequest)
    MergeFrom(*source);
  }
}

void DbListRequest::MergeFrom(const DbListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.DbListRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
}

void DbListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.DbListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DbListRequest::CopyFrom(const DbListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.DbListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbListRequest::IsInitialized() const {

  return true;
}

void DbListRequest::Swap(DbListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DbListRequest::InternalSwap(DbListRequest* other) {
  request_id_.Swap(&other->request_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DbListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DbListRequest_descriptor_;
  metadata.reflection = DbListRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DbListRequest

// optional string request_id = 1;
void DbListRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbListRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListRequest.request_id)
}
 void DbListRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListRequest.request_id)
}
 void DbListRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListRequest.request_id)
}
 ::std::string* DbListRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbListRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListRequest.request_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbListResponse_DbStatus::kNameFieldNumber;
const int DbListResponse_DbStatus::kNtotalFieldNumber;
const int DbListResponse_DbStatus::kMaxSizeFieldNumber;
const int DbListResponse_DbStatus::kCurrMaxIdFieldNumber;
const int DbListResponse_DbStatus::kCurrPersistMaxIdFieldNumber;
const int DbListResponse_DbStatus::kPersistPathFieldNumber;
const int DbListResponse_DbStatus::kRawDataPathFieldNumber;
const int DbListResponse_DbStatus::kDimensionFieldNumber;
const int DbListResponse_DbStatus::kModelFieldNumber;
const int DbListResponse_DbStatus::kBlackListLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbListResponse_DbStatus::DbListResponse_DbStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.DbListResponse.DbStatus)
}

void DbListResponse_DbStatus::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DbListResponse_DbStatus::DbListResponse_DbStatus(const DbListResponse_DbStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.DbListResponse.DbStatus)
}

void DbListResponse_DbStatus::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ntotal_ = GOOGLE_ULONGLONG(0);
  max_size_ = GOOGLE_ULONGLONG(0);
  curr_max_id_ = GOOGLE_ULONGLONG(0);
  curr_persist_max_id_ = GOOGLE_ULONGLONG(0);
  persist_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_data_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimension_ = GOOGLE_ULONGLONG(0);
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  black_list_len_ = GOOGLE_ULONGLONG(0);
}

DbListResponse_DbStatus::~DbListResponse_DbStatus() {
  // @@protoc_insertion_point(destructor:faiss_server.DbListResponse.DbStatus)
  SharedDtor();
}

void DbListResponse_DbStatus::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persist_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_data_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DbListResponse_DbStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DbListResponse_DbStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DbListResponse_DbStatus_descriptor_;
}

const DbListResponse_DbStatus& DbListResponse_DbStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

DbListResponse_DbStatus* DbListResponse_DbStatus::default_instance_ = NULL;

DbListResponse_DbStatus* DbListResponse_DbStatus::New(::google::protobuf::Arena* arena) const {
  DbListResponse_DbStatus* n = new DbListResponse_DbStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DbListResponse_DbStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.DbListResponse.DbStatus)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DbListResponse_DbStatus, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DbListResponse_DbStatus*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ntotal_, curr_persist_max_id_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persist_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_data_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimension_ = GOOGLE_ULONGLONG(0);
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  black_list_len_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

}

bool DbListResponse_DbStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.DbListResponse.DbStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbListResponse.DbStatus.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ntotal;
        break;
      }

      // optional uint64 ntotal = 2;
      case 2: {
        if (tag == 16) {
         parse_ntotal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ntotal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_max_size;
        break;
      }

      // optional uint64 max_size = 3;
      case 3: {
        if (tag == 24) {
         parse_max_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_curr_max_id;
        break;
      }

      // optional uint64 curr_max_id = 4;
      case 4: {
        if (tag == 32) {
         parse_curr_max_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &curr_max_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_curr_persist_max_id;
        break;
      }

      // optional uint64 curr_persist_max_id = 5;
      case 5: {
        if (tag == 40) {
         parse_curr_persist_max_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &curr_persist_max_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_persist_path;
        break;
      }

      // optional string persist_path = 6;
      case 6: {
        if (tag == 50) {
         parse_persist_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persist_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->persist_path().data(), this->persist_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbListResponse.DbStatus.persist_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_raw_data_path;
        break;
      }

      // optional string raw_data_path = 7;
      case 7: {
        if (tag == 58) {
         parse_raw_data_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raw_data_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->raw_data_path().data(), this->raw_data_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbListResponse.DbStatus.raw_data_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_dimension;
        break;
      }

      // optional uint64 dimension = 8;
      case 8: {
        if (tag == 64) {
         parse_dimension:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dimension_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_model;
        break;
      }

      // optional string model = 9;
      case 9: {
        if (tag == 74) {
         parse_model:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model().data(), this->model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbListResponse.DbStatus.model"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_black_list_len;
        break;
      }

      // optional uint64 black_list_len = 10;
      case 10: {
        if (tag == 80) {
         parse_black_list_len:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &black_list_len_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.DbListResponse.DbStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.DbListResponse.DbStatus)
  return false;
#undef DO_
}

void DbListResponse_DbStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.DbListResponse.DbStatus)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.DbStatus.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 ntotal = 2;
  if (this->ntotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ntotal(), output);
  }

  // optional uint64 max_size = 3;
  if (this->max_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->max_size(), output);
  }

  // optional uint64 curr_max_id = 4;
  if (this->curr_max_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->curr_max_id(), output);
  }

  // optional uint64 curr_persist_max_id = 5;
  if (this->curr_persist_max_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->curr_persist_max_id(), output);
  }

  // optional string persist_path = 6;
  if (this->persist_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->persist_path().data(), this->persist_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.DbStatus.persist_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->persist_path(), output);
  }

  // optional string raw_data_path = 7;
  if (this->raw_data_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->raw_data_path().data(), this->raw_data_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.DbStatus.raw_data_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->raw_data_path(), output);
  }

  // optional uint64 dimension = 8;
  if (this->dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->dimension(), output);
  }

  // optional string model = 9;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.DbStatus.model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->model(), output);
  }

  // optional uint64 black_list_len = 10;
  if (this->black_list_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->black_list_len(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.DbListResponse.DbStatus)
}

::google::protobuf::uint8* DbListResponse_DbStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.DbListResponse.DbStatus)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.DbStatus.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 ntotal = 2;
  if (this->ntotal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ntotal(), target);
  }

  // optional uint64 max_size = 3;
  if (this->max_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->max_size(), target);
  }

  // optional uint64 curr_max_id = 4;
  if (this->curr_max_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->curr_max_id(), target);
  }

  // optional uint64 curr_persist_max_id = 5;
  if (this->curr_persist_max_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->curr_persist_max_id(), target);
  }

  // optional string persist_path = 6;
  if (this->persist_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->persist_path().data(), this->persist_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.DbStatus.persist_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->persist_path(), target);
  }

  // optional string raw_data_path = 7;
  if (this->raw_data_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->raw_data_path().data(), this->raw_data_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.DbStatus.raw_data_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->raw_data_path(), target);
  }

  // optional uint64 dimension = 8;
  if (this->dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->dimension(), target);
  }

  // optional string model = 9;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), this->model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.DbStatus.model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->model(), target);
  }

  // optional uint64 black_list_len = 10;
  if (this->black_list_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->black_list_len(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.DbListResponse.DbStatus)
  return target;
}

int DbListResponse_DbStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.DbListResponse.DbStatus)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint64 ntotal = 2;
  if (this->ntotal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ntotal());
  }

  // optional uint64 max_size = 3;
  if (this->max_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_size());
  }

  // optional uint64 curr_max_id = 4;
  if (this->curr_max_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->curr_max_id());
  }

  // optional uint64 curr_persist_max_id = 5;
  if (this->curr_persist_max_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->curr_persist_max_id());
  }

  // optional string persist_path = 6;
  if (this->persist_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->persist_path());
  }

  // optional string raw_data_path = 7;
  if (this->raw_data_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raw_data_path());
  }

  // optional uint64 dimension = 8;
  if (this->dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dimension());
  }

  // optional string model = 9;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());
  }

  // optional uint64 black_list_len = 10;
  if (this->black_list_len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->black_list_len());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DbListResponse_DbStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.DbListResponse.DbStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DbListResponse_DbStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DbListResponse_DbStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.DbListResponse.DbStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.DbListResponse.DbStatus)
    MergeFrom(*source);
  }
}

void DbListResponse_DbStatus::MergeFrom(const DbListResponse_DbStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.DbListResponse.DbStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.ntotal() != 0) {
    set_ntotal(from.ntotal());
  }
  if (from.max_size() != 0) {
    set_max_size(from.max_size());
  }
  if (from.curr_max_id() != 0) {
    set_curr_max_id(from.curr_max_id());
  }
  if (from.curr_persist_max_id() != 0) {
    set_curr_persist_max_id(from.curr_persist_max_id());
  }
  if (from.persist_path().size() > 0) {

    persist_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persist_path_);
  }
  if (from.raw_data_path().size() > 0) {

    raw_data_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_data_path_);
  }
  if (from.dimension() != 0) {
    set_dimension(from.dimension());
  }
  if (from.model().size() > 0) {

    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  if (from.black_list_len() != 0) {
    set_black_list_len(from.black_list_len());
  }
}

void DbListResponse_DbStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.DbListResponse.DbStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DbListResponse_DbStatus::CopyFrom(const DbListResponse_DbStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.DbListResponse.DbStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbListResponse_DbStatus::IsInitialized() const {

  return true;
}

void DbListResponse_DbStatus::Swap(DbListResponse_DbStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DbListResponse_DbStatus::InternalSwap(DbListResponse_DbStatus* other) {
  name_.Swap(&other->name_);
  std::swap(ntotal_, other->ntotal_);
  std::swap(max_size_, other->max_size_);
  std::swap(curr_max_id_, other->curr_max_id_);
  std::swap(curr_persist_max_id_, other->curr_persist_max_id_);
  persist_path_.Swap(&other->persist_path_);
  raw_data_path_.Swap(&other->raw_data_path_);
  std::swap(dimension_, other->dimension_);
  model_.Swap(&other->model_);
  std::swap(black_list_len_, other->black_list_len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DbListResponse_DbStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DbListResponse_DbStatus_descriptor_;
  metadata.reflection = DbListResponse_DbStatus_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DbListResponse::kDbStatusFieldNumber;
const int DbListResponse::kErrorCodeFieldNumber;
const int DbListResponse::kErrorMsgFieldNumber;
const int DbListResponse::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DbListResponse::DbListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.DbListResponse)
}

void DbListResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DbListResponse::DbListResponse(const DbListResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.DbListResponse)
}

void DbListResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  error_code_ = GOOGLE_LONGLONG(0);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DbListResponse::~DbListResponse() {
  // @@protoc_insertion_point(destructor:faiss_server.DbListResponse)
  SharedDtor();
}

void DbListResponse::SharedDtor() {
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DbListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DbListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DbListResponse_descriptor_;
}

const DbListResponse& DbListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

DbListResponse* DbListResponse::default_instance_ = NULL;

DbListResponse* DbListResponse::New(::google::protobuf::Arena* arena) const {
  DbListResponse* n = new DbListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DbListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.DbListResponse)
  error_code_ = GOOGLE_LONGLONG(0);
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_status_.Clear();
}

bool DbListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.DbListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .faiss_server.DbListResponse.DbStatus db_status = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_db_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_db_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_db_status;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_error_code;
        break;
      }

      // optional int64 error_code = 3;
      case 3: {
        if (tag == 24) {
         parse_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &error_code_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_error_msg;
        break;
      }

      // optional string error_msg = 4;
      case 4: {
        if (tag == 34) {
         parse_error_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), this->error_msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbListResponse.error_msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_request_id;
        break;
      }

      // optional string request_id = 5;
      case 5: {
        if (tag == 42) {
         parse_request_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.DbListResponse.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.DbListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.DbListResponse)
  return false;
#undef DO_
}

void DbListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.DbListResponse)
  // repeated .faiss_server.DbListResponse.DbStatus db_status = 2;
  for (unsigned int i = 0, n = this->db_status_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->db_status(i), output);
  }

  // optional int64 error_code = 3;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->error_code(), output);
  }

  // optional string error_msg = 4;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), this->error_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->error_msg(), output);
  }

  // optional string request_id = 5;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->request_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.DbListResponse)
}

::google::protobuf::uint8* DbListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.DbListResponse)
  // repeated .faiss_server.DbListResponse.DbStatus db_status = 2;
  for (unsigned int i = 0, n = this->db_status_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->db_status(i), false, target);
  }

  // optional int64 error_code = 3;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->error_code(), target);
  }

  // optional string error_msg = 4;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), this->error_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->error_msg(), target);
  }

  // optional string request_id = 5;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.DbListResponse.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->request_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.DbListResponse)
  return target;
}

int DbListResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.DbListResponse)
  int total_size = 0;

  // optional int64 error_code = 3;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->error_code());
  }

  // optional string error_msg = 4;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  // optional string request_id = 5;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // repeated .faiss_server.DbListResponse.DbStatus db_status = 2;
  total_size += 1 * this->db_status_size();
  for (int i = 0; i < this->db_status_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->db_status(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DbListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.DbListResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DbListResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DbListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.DbListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.DbListResponse)
    MergeFrom(*source);
  }
}

void DbListResponse::MergeFrom(const DbListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.DbListResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  db_status_.MergeFrom(from.db_status_);
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
}

void DbListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.DbListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DbListResponse::CopyFrom(const DbListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.DbListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DbListResponse::IsInitialized() const {

  return true;
}

void DbListResponse::Swap(DbListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DbListResponse::InternalSwap(DbListResponse* other) {
  db_status_.UnsafeArenaSwap(&other->db_status_);
  std::swap(error_code_, other->error_code_);
  error_msg_.Swap(&other->error_msg_);
  request_id_.Swap(&other->request_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DbListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DbListResponse_descriptor_;
  metadata.reflection = DbListResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DbListResponse_DbStatus

// optional string name = 1;
void DbListResponse_DbStatus::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbListResponse_DbStatus::name() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse_DbStatus::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.name)
}
 void DbListResponse_DbStatus::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.DbStatus.name)
}
 void DbListResponse_DbStatus::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.DbStatus.name)
}
 ::std::string* DbListResponse_DbStatus::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.DbStatus.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbListResponse_DbStatus::release_name() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.DbStatus.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse_DbStatus::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.DbStatus.name)
}

// optional uint64 ntotal = 2;
void DbListResponse_DbStatus::clear_ntotal() {
  ntotal_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DbListResponse_DbStatus::ntotal() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.ntotal)
  return ntotal_;
}
 void DbListResponse_DbStatus::set_ntotal(::google::protobuf::uint64 value) {
  
  ntotal_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.ntotal)
}

// optional uint64 max_size = 3;
void DbListResponse_DbStatus::clear_max_size() {
  max_size_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DbListResponse_DbStatus::max_size() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.max_size)
  return max_size_;
}
 void DbListResponse_DbStatus::set_max_size(::google::protobuf::uint64 value) {
  
  max_size_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.max_size)
}

// optional uint64 curr_max_id = 4;
void DbListResponse_DbStatus::clear_curr_max_id() {
  curr_max_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DbListResponse_DbStatus::curr_max_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.curr_max_id)
  return curr_max_id_;
}
 void DbListResponse_DbStatus::set_curr_max_id(::google::protobuf::uint64 value) {
  
  curr_max_id_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.curr_max_id)
}

// optional uint64 curr_persist_max_id = 5;
void DbListResponse_DbStatus::clear_curr_persist_max_id() {
  curr_persist_max_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DbListResponse_DbStatus::curr_persist_max_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.curr_persist_max_id)
  return curr_persist_max_id_;
}
 void DbListResponse_DbStatus::set_curr_persist_max_id(::google::protobuf::uint64 value) {
  
  curr_persist_max_id_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.curr_persist_max_id)
}

// optional string persist_path = 6;
void DbListResponse_DbStatus::clear_persist_path() {
  persist_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbListResponse_DbStatus::persist_path() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.persist_path)
  return persist_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse_DbStatus::set_persist_path(const ::std::string& value) {
  
  persist_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.persist_path)
}
 void DbListResponse_DbStatus::set_persist_path(const char* value) {
  
  persist_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.DbStatus.persist_path)
}
 void DbListResponse_DbStatus::set_persist_path(const char* value, size_t size) {
  
  persist_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.DbStatus.persist_path)
}
 ::std::string* DbListResponse_DbStatus::mutable_persist_path() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.DbStatus.persist_path)
  return persist_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbListResponse_DbStatus::release_persist_path() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.DbStatus.persist_path)
  
  return persist_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse_DbStatus::set_allocated_persist_path(::std::string* persist_path) {
  if (persist_path != NULL) {
    
  } else {
    
  }
  persist_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persist_path);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.DbStatus.persist_path)
}

// optional string raw_data_path = 7;
void DbListResponse_DbStatus::clear_raw_data_path() {
  raw_data_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbListResponse_DbStatus::raw_data_path() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.raw_data_path)
  return raw_data_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse_DbStatus::set_raw_data_path(const ::std::string& value) {
  
  raw_data_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.raw_data_path)
}
 void DbListResponse_DbStatus::set_raw_data_path(const char* value) {
  
  raw_data_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.DbStatus.raw_data_path)
}
 void DbListResponse_DbStatus::set_raw_data_path(const char* value, size_t size) {
  
  raw_data_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.DbStatus.raw_data_path)
}
 ::std::string* DbListResponse_DbStatus::mutable_raw_data_path() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.DbStatus.raw_data_path)
  return raw_data_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbListResponse_DbStatus::release_raw_data_path() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.DbStatus.raw_data_path)
  
  return raw_data_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse_DbStatus::set_allocated_raw_data_path(::std::string* raw_data_path) {
  if (raw_data_path != NULL) {
    
  } else {
    
  }
  raw_data_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_data_path);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.DbStatus.raw_data_path)
}

// optional uint64 dimension = 8;
void DbListResponse_DbStatus::clear_dimension() {
  dimension_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DbListResponse_DbStatus::dimension() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.dimension)
  return dimension_;
}
 void DbListResponse_DbStatus::set_dimension(::google::protobuf::uint64 value) {
  
  dimension_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.dimension)
}

// optional string model = 9;
void DbListResponse_DbStatus::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbListResponse_DbStatus::model() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.model)
  return model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse_DbStatus::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.model)
}
 void DbListResponse_DbStatus::set_model(const char* value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.DbStatus.model)
}
 void DbListResponse_DbStatus::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.DbStatus.model)
}
 ::std::string* DbListResponse_DbStatus::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.DbStatus.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbListResponse_DbStatus::release_model() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.DbStatus.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse_DbStatus::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.DbStatus.model)
}

// optional uint64 black_list_len = 10;
void DbListResponse_DbStatus::clear_black_list_len() {
  black_list_len_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DbListResponse_DbStatus::black_list_len() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.DbStatus.black_list_len)
  return black_list_len_;
}
 void DbListResponse_DbStatus::set_black_list_len(::google::protobuf::uint64 value) {
  
  black_list_len_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.DbStatus.black_list_len)
}

// -------------------------------------------------------------------

// DbListResponse

// repeated .faiss_server.DbListResponse.DbStatus db_status = 2;
int DbListResponse::db_status_size() const {
  return db_status_.size();
}
void DbListResponse::clear_db_status() {
  db_status_.Clear();
}
const ::faiss_server::DbListResponse_DbStatus& DbListResponse::db_status(int index) const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.db_status)
  return db_status_.Get(index);
}
::faiss_server::DbListResponse_DbStatus* DbListResponse::mutable_db_status(int index) {
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.db_status)
  return db_status_.Mutable(index);
}
::faiss_server::DbListResponse_DbStatus* DbListResponse::add_db_status() {
  // @@protoc_insertion_point(field_add:faiss_server.DbListResponse.db_status)
  return db_status_.Add();
}
::google::protobuf::RepeatedPtrField< ::faiss_server::DbListResponse_DbStatus >*
DbListResponse::mutable_db_status() {
  // @@protoc_insertion_point(field_mutable_list:faiss_server.DbListResponse.db_status)
  return &db_status_;
}
const ::google::protobuf::RepeatedPtrField< ::faiss_server::DbListResponse_DbStatus >&
DbListResponse::db_status() const {
  // @@protoc_insertion_point(field_list:faiss_server.DbListResponse.db_status)
  return db_status_;
}

// optional int64 error_code = 3;
void DbListResponse::clear_error_code() {
  error_code_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 DbListResponse::error_code() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.error_code)
  return error_code_;
}
 void DbListResponse::set_error_code(::google::protobuf::int64 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.error_code)
}

// optional string error_msg = 4;
void DbListResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbListResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.error_msg)
  return error_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.error_msg)
}
 void DbListResponse::set_error_msg(const char* value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.error_msg)
}
 void DbListResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.error_msg)
}
 ::std::string* DbListResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbListResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.error_msg)
}

// optional string request_id = 5;
void DbListResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DbListResponse::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.DbListResponse.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.DbListResponse.request_id)
}
 void DbListResponse::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.DbListResponse.request_id)
}
 void DbListResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.DbListResponse.request_id)
}
 ::std::string* DbListResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.DbListResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DbListResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.DbListResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DbListResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.DbListResponse.request_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HGetDelRequest::kDbNameFieldNumber;
const int HGetDelRequest::kIdFieldNumber;
const int HGetDelRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HGetDelRequest::HGetDelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.HGetDelRequest)
}

void HGetDelRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HGetDelRequest::HGetDelRequest(const HGetDelRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.HGetDelRequest)
}

void HGetDelRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_ULONGLONG(0);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HGetDelRequest::~HGetDelRequest() {
  // @@protoc_insertion_point(destructor:faiss_server.HGetDelRequest)
  SharedDtor();
}

void HGetDelRequest::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HGetDelRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HGetDelRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HGetDelRequest_descriptor_;
}

const HGetDelRequest& HGetDelRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

HGetDelRequest* HGetDelRequest::default_instance_ = NULL;

HGetDelRequest* HGetDelRequest::New(::google::protobuf::Arena* arena) const {
  HGetDelRequest* n = new HGetDelRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HGetDelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.HGetDelRequest)
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_ULONGLONG(0);
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HGetDelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.HGetDelRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), this->db_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HGetDelRequest.db_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // optional uint64 id = 3;
      case 3: {
        if (tag == 24) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_request_id;
        break;
      }

      // optional string request_id = 4;
      case 4: {
        if (tag == 34) {
         parse_request_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HGetDelRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.HGetDelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.HGetDelRequest)
  return false;
#undef DO_
}

void HGetDelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.HGetDelRequest)
  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), this->db_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HGetDelRequest.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // optional uint64 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->id(), output);
  }

  // optional string request_id = 4;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HGetDelRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->request_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.HGetDelRequest)
}

::google::protobuf::uint8* HGetDelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.HGetDelRequest)
  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), this->db_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HGetDelRequest.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // optional uint64 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->id(), target);
  }

  // optional string request_id = 4;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HGetDelRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->request_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.HGetDelRequest)
  return target;
}

int HGetDelRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.HGetDelRequest)
  int total_size = 0;

  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // optional uint64 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // optional string request_id = 4;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HGetDelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.HGetDelRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HGetDelRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HGetDelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.HGetDelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.HGetDelRequest)
    MergeFrom(*source);
  }
}

void HGetDelRequest::MergeFrom(const HGetDelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.HGetDelRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
}

void HGetDelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.HGetDelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HGetDelRequest::CopyFrom(const HGetDelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.HGetDelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HGetDelRequest::IsInitialized() const {

  return true;
}

void HGetDelRequest::Swap(HGetDelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HGetDelRequest::InternalSwap(HGetDelRequest* other) {
  db_name_.Swap(&other->db_name_);
  std::swap(id_, other->id_);
  request_id_.Swap(&other->request_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HGetDelRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HGetDelRequest_descriptor_;
  metadata.reflection = HGetDelRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HGetDelRequest

// optional string db_name = 1;
void HGetDelRequest::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HGetDelRequest::db_name() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetDelRequest.db_name)
  return db_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HGetDelRequest::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HGetDelRequest.db_name)
}
 void HGetDelRequest::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HGetDelRequest.db_name)
}
 void HGetDelRequest::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HGetDelRequest.db_name)
}
 ::std::string* HGetDelRequest::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HGetDelRequest.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HGetDelRequest::release_db_name() {
  // @@protoc_insertion_point(field_release:faiss_server.HGetDelRequest.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HGetDelRequest::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HGetDelRequest.db_name)
}

// optional uint64 id = 3;
void HGetDelRequest::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 HGetDelRequest::id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetDelRequest.id)
  return id_;
}
 void HGetDelRequest::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HGetDelRequest.id)
}

// optional string request_id = 4;
void HGetDelRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HGetDelRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetDelRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HGetDelRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HGetDelRequest.request_id)
}
 void HGetDelRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HGetDelRequest.request_id)
}
 void HGetDelRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HGetDelRequest.request_id)
}
 ::std::string* HGetDelRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HGetDelRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HGetDelRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HGetDelRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HGetDelRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HGetDelRequest.request_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HGetResponse::kFeatureFieldNumber;
const int HGetResponse::kDimensionFieldNumber;
const int HGetResponse::kRequestIdFieldNumber;
const int HGetResponse::kErrorCodeFieldNumber;
const int HGetResponse::kErrorMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HGetResponse::HGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.HGetResponse)
}

void HGetResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HGetResponse::HGetResponse(const HGetResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.HGetResponse)
}

void HGetResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  feature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimension_ = GOOGLE_ULONGLONG(0);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = GOOGLE_LONGLONG(0);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HGetResponse::~HGetResponse() {
  // @@protoc_insertion_point(destructor:faiss_server.HGetResponse)
  SharedDtor();
}

void HGetResponse::SharedDtor() {
  feature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HGetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HGetResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HGetResponse_descriptor_;
}

const HGetResponse& HGetResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

HGetResponse* HGetResponse::default_instance_ = NULL;

HGetResponse* HGetResponse::New(::google::protobuf::Arena* arena) const {
  HGetResponse* n = new HGetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.HGetResponse)
  feature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimension_ = GOOGLE_ULONGLONG(0);
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = GOOGLE_LONGLONG(0);
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.HGetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes feature = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_feature()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dimension;
        break;
      }

      // optional uint64 dimension = 5;
      case 5: {
        if (tag == 40) {
         parse_dimension:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dimension_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_request_id;
        break;
      }

      // optional string request_id = 6;
      case 6: {
        if (tag == 50) {
         parse_request_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HGetResponse.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_error_code;
        break;
      }

      // optional int64 error_code = 7;
      case 7: {
        if (tag == 56) {
         parse_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &error_code_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_error_msg;
        break;
      }

      // optional string error_msg = 8;
      case 8: {
        if (tag == 66) {
         parse_error_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), this->error_msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HGetResponse.error_msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.HGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.HGetResponse)
  return false;
#undef DO_
}

void HGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.HGetResponse)
  // optional bytes feature = 2;
  if (this->feature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->feature(), output);
  }

  // optional uint64 dimension = 5;
  if (this->dimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->dimension(), output);
  }

  // optional string request_id = 6;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HGetResponse.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->request_id(), output);
  }

  // optional int64 error_code = 7;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->error_code(), output);
  }

  // optional string error_msg = 8;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), this->error_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HGetResponse.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->error_msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.HGetResponse)
}

::google::protobuf::uint8* HGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.HGetResponse)
  // optional bytes feature = 2;
  if (this->feature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->feature(), target);
  }

  // optional uint64 dimension = 5;
  if (this->dimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->dimension(), target);
  }

  // optional string request_id = 6;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HGetResponse.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->request_id(), target);
  }

  // optional int64 error_code = 7;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->error_code(), target);
  }

  // optional string error_msg = 8;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), this->error_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HGetResponse.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->error_msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.HGetResponse)
  return target;
}

int HGetResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.HGetResponse)
  int total_size = 0;

  // optional bytes feature = 2;
  if (this->feature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->feature());
  }

  // optional uint64 dimension = 5;
  if (this->dimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dimension());
  }

  // optional string request_id = 6;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // optional int64 error_code = 7;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->error_code());
  }

  // optional string error_msg = 8;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.HGetResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HGetResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.HGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.HGetResponse)
    MergeFrom(*source);
  }
}

void HGetResponse::MergeFrom(const HGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.HGetResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.feature().size() > 0) {

    feature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feature_);
  }
  if (from.dimension() != 0) {
    set_dimension(from.dimension());
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
}

void HGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.HGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HGetResponse::CopyFrom(const HGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.HGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HGetResponse::IsInitialized() const {

  return true;
}

void HGetResponse::Swap(HGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HGetResponse::InternalSwap(HGetResponse* other) {
  feature_.Swap(&other->feature_);
  std::swap(dimension_, other->dimension_);
  request_id_.Swap(&other->request_id_);
  std::swap(error_code_, other->error_code_);
  error_msg_.Swap(&other->error_msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HGetResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HGetResponse_descriptor_;
  metadata.reflection = HGetResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HGetResponse

// optional bytes feature = 2;
void HGetResponse::clear_feature() {
  feature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HGetResponse::feature() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetResponse.feature)
  return feature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HGetResponse::set_feature(const ::std::string& value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HGetResponse.feature)
}
 void HGetResponse::set_feature(const char* value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HGetResponse.feature)
}
 void HGetResponse::set_feature(const void* value, size_t size) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HGetResponse.feature)
}
 ::std::string* HGetResponse::mutable_feature() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HGetResponse.feature)
  return feature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HGetResponse::release_feature() {
  // @@protoc_insertion_point(field_release:faiss_server.HGetResponse.feature)
  
  return feature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HGetResponse::set_allocated_feature(::std::string* feature) {
  if (feature != NULL) {
    
  } else {
    
  }
  feature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feature);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HGetResponse.feature)
}

// optional uint64 dimension = 5;
void HGetResponse::clear_dimension() {
  dimension_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 HGetResponse::dimension() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetResponse.dimension)
  return dimension_;
}
 void HGetResponse::set_dimension(::google::protobuf::uint64 value) {
  
  dimension_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HGetResponse.dimension)
}

// optional string request_id = 6;
void HGetResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HGetResponse::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetResponse.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HGetResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HGetResponse.request_id)
}
 void HGetResponse::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HGetResponse.request_id)
}
 void HGetResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HGetResponse.request_id)
}
 ::std::string* HGetResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HGetResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HGetResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HGetResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HGetResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HGetResponse.request_id)
}

// optional int64 error_code = 7;
void HGetResponse::clear_error_code() {
  error_code_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 HGetResponse::error_code() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetResponse.error_code)
  return error_code_;
}
 void HGetResponse::set_error_code(::google::protobuf::int64 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HGetResponse.error_code)
}

// optional string error_msg = 8;
void HGetResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HGetResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:faiss_server.HGetResponse.error_msg)
  return error_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HGetResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HGetResponse.error_msg)
}
 void HGetResponse::set_error_msg(const char* value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HGetResponse.error_msg)
}
 void HGetResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HGetResponse.error_msg)
}
 ::std::string* HGetResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HGetResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HGetResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:faiss_server.HGetResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HGetResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HGetResponse.error_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HSetRequest::kDbNameFieldNumber;
const int HSetRequest::kFeatureFieldNumber;
const int HSetRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HSetRequest::HSetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.HSetRequest)
}

void HSetRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HSetRequest::HSetRequest(const HSetRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.HSetRequest)
}

void HSetRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HSetRequest::~HSetRequest() {
  // @@protoc_insertion_point(destructor:faiss_server.HSetRequest)
  SharedDtor();
}

void HSetRequest::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HSetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HSetRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HSetRequest_descriptor_;
}

const HSetRequest& HSetRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

HSetRequest* HSetRequest::default_instance_ = NULL;

HSetRequest* HSetRequest::New(::google::protobuf::Arena* arena) const {
  HSetRequest* n = new HSetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.HSetRequest)
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HSetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.HSetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), this->db_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HSetRequest.db_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_feature;
        break;
      }

      // optional bytes feature = 3;
      case 3: {
        if (tag == 26) {
         parse_feature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_feature()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_request_id;
        break;
      }

      // optional string request_id = 7;
      case 7: {
        if (tag == 58) {
         parse_request_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HSetRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.HSetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.HSetRequest)
  return false;
#undef DO_
}

void HSetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.HSetRequest)
  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), this->db_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSetRequest.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // optional bytes feature = 3;
  if (this->feature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->feature(), output);
  }

  // optional string request_id = 7;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSetRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->request_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.HSetRequest)
}

::google::protobuf::uint8* HSetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.HSetRequest)
  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), this->db_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSetRequest.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // optional bytes feature = 3;
  if (this->feature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->feature(), target);
  }

  // optional string request_id = 7;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSetRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->request_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.HSetRequest)
  return target;
}

int HSetRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.HSetRequest)
  int total_size = 0;

  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // optional bytes feature = 3;
  if (this->feature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->feature());
  }

  // optional string request_id = 7;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HSetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.HSetRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HSetRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HSetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.HSetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.HSetRequest)
    MergeFrom(*source);
  }
}

void HSetRequest::MergeFrom(const HSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.HSetRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.feature().size() > 0) {

    feature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feature_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
}

void HSetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.HSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HSetRequest::CopyFrom(const HSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.HSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HSetRequest::IsInitialized() const {

  return true;
}

void HSetRequest::Swap(HSetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HSetRequest::InternalSwap(HSetRequest* other) {
  db_name_.Swap(&other->db_name_);
  feature_.Swap(&other->feature_);
  request_id_.Swap(&other->request_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HSetRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HSetRequest_descriptor_;
  metadata.reflection = HSetRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HSetRequest

// optional string db_name = 1;
void HSetRequest::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HSetRequest::db_name() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetRequest.db_name)
  return db_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSetRequest::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSetRequest.db_name)
}
 void HSetRequest::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSetRequest.db_name)
}
 void HSetRequest::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSetRequest.db_name)
}
 ::std::string* HSetRequest::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSetRequest.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HSetRequest::release_db_name() {
  // @@protoc_insertion_point(field_release:faiss_server.HSetRequest.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSetRequest::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSetRequest.db_name)
}

// optional bytes feature = 3;
void HSetRequest::clear_feature() {
  feature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HSetRequest::feature() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetRequest.feature)
  return feature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSetRequest::set_feature(const ::std::string& value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSetRequest.feature)
}
 void HSetRequest::set_feature(const char* value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSetRequest.feature)
}
 void HSetRequest::set_feature(const void* value, size_t size) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSetRequest.feature)
}
 ::std::string* HSetRequest::mutable_feature() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSetRequest.feature)
  return feature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HSetRequest::release_feature() {
  // @@protoc_insertion_point(field_release:faiss_server.HSetRequest.feature)
  
  return feature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSetRequest::set_allocated_feature(::std::string* feature) {
  if (feature != NULL) {
    
  } else {
    
  }
  feature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feature);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSetRequest.feature)
}

// optional string request_id = 7;
void HSetRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HSetRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSetRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSetRequest.request_id)
}
 void HSetRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSetRequest.request_id)
}
 void HSetRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSetRequest.request_id)
}
 ::std::string* HSetRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSetRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HSetRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HSetRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSetRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSetRequest.request_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HSetResponse::kIdFieldNumber;
const int HSetResponse::kRequestIdFieldNumber;
const int HSetResponse::kErrorCodeFieldNumber;
const int HSetResponse::kErrorMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HSetResponse::HSetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.HSetResponse)
}

void HSetResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HSetResponse::HSetResponse(const HSetResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.HSetResponse)
}

void HSetResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = GOOGLE_LONGLONG(0);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HSetResponse::~HSetResponse() {
  // @@protoc_insertion_point(destructor:faiss_server.HSetResponse)
  SharedDtor();
}

void HSetResponse::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HSetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HSetResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HSetResponse_descriptor_;
}

const HSetResponse& HSetResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

HSetResponse* HSetResponse::default_instance_ = NULL;

HSetResponse* HSetResponse::New(::google::protobuf::Arena* arena) const {
  HSetResponse* n = new HSetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HSetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.HSetResponse)
  id_ = GOOGLE_ULONGLONG(0);
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = GOOGLE_LONGLONG(0);
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HSetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.HSetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_request_id;
        break;
      }

      // optional string request_id = 2;
      case 2: {
        if (tag == 18) {
         parse_request_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HSetResponse.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_error_code;
        break;
      }

      // optional int64 error_code = 3;
      case 3: {
        if (tag == 24) {
         parse_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &error_code_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_error_msg;
        break;
      }

      // optional string error_msg = 4;
      case 4: {
        if (tag == 34) {
         parse_error_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), this->error_msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HSetResponse.error_msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.HSetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.HSetResponse)
  return false;
#undef DO_
}

void HSetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.HSetResponse)
  // optional uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional string request_id = 2;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSetResponse.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->request_id(), output);
  }

  // optional int64 error_code = 3;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->error_code(), output);
  }

  // optional string error_msg = 4;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), this->error_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSetResponse.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->error_msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.HSetResponse)
}

::google::protobuf::uint8* HSetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.HSetResponse)
  // optional uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional string request_id = 2;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSetResponse.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->request_id(), target);
  }

  // optional int64 error_code = 3;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->error_code(), target);
  }

  // optional string error_msg = 4;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), this->error_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSetResponse.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->error_msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.HSetResponse)
  return target;
}

int HSetResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.HSetResponse)
  int total_size = 0;

  // optional uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // optional string request_id = 2;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // optional int64 error_code = 3;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->error_code());
  }

  // optional string error_msg = 4;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HSetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.HSetResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HSetResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HSetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.HSetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.HSetResponse)
    MergeFrom(*source);
  }
}

void HSetResponse::MergeFrom(const HSetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.HSetResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
}

void HSetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.HSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HSetResponse::CopyFrom(const HSetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.HSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HSetResponse::IsInitialized() const {

  return true;
}

void HSetResponse::Swap(HSetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HSetResponse::InternalSwap(HSetResponse* other) {
  std::swap(id_, other->id_);
  request_id_.Swap(&other->request_id_);
  std::swap(error_code_, other->error_code_);
  error_msg_.Swap(&other->error_msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HSetResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HSetResponse_descriptor_;
  metadata.reflection = HSetResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HSetResponse

// optional uint64 id = 1;
void HSetResponse::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 HSetResponse::id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetResponse.id)
  return id_;
}
 void HSetResponse::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSetResponse.id)
}

// optional string request_id = 2;
void HSetResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HSetResponse::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetResponse.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSetResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSetResponse.request_id)
}
 void HSetResponse::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSetResponse.request_id)
}
 void HSetResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSetResponse.request_id)
}
 ::std::string* HSetResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSetResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HSetResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HSetResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSetResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSetResponse.request_id)
}

// optional int64 error_code = 3;
void HSetResponse::clear_error_code() {
  error_code_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 HSetResponse::error_code() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetResponse.error_code)
  return error_code_;
}
 void HSetResponse::set_error_code(::google::protobuf::int64 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSetResponse.error_code)
}

// optional string error_msg = 4;
void HSetResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HSetResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSetResponse.error_msg)
  return error_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSetResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSetResponse.error_msg)
}
 void HSetResponse::set_error_msg(const char* value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSetResponse.error_msg)
}
 void HSetResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSetResponse.error_msg)
}
 ::std::string* HSetResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSetResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HSetResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:faiss_server.HSetResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSetResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSetResponse.error_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* HSearchRequest_DistanceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HSearchRequest_DistanceType_descriptor_;
}
bool HSearchRequest_DistanceType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HSearchRequest_DistanceType HSearchRequest::Euclid;
const HSearchRequest_DistanceType HSearchRequest::Cosine;
const HSearchRequest_DistanceType HSearchRequest::DistanceType_MIN;
const HSearchRequest_DistanceType HSearchRequest::DistanceType_MAX;
const int HSearchRequest::DistanceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HSearchRequest::kDbNameFieldNumber;
const int HSearchRequest::kFeatureFieldNumber;
const int HSearchRequest::kTopKFieldNumber;
const int HSearchRequest::kDistanceTypeFieldNumber;
const int HSearchRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HSearchRequest::HSearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.HSearchRequest)
}

void HSearchRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HSearchRequest::HSearchRequest(const HSearchRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.HSearchRequest)
}

void HSearchRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_k_ = GOOGLE_ULONGLONG(0);
  distance_type_ = 0;
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HSearchRequest::~HSearchRequest() {
  // @@protoc_insertion_point(destructor:faiss_server.HSearchRequest)
  SharedDtor();
}

void HSearchRequest::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HSearchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HSearchRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HSearchRequest_descriptor_;
}

const HSearchRequest& HSearchRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

HSearchRequest* HSearchRequest::default_instance_ = NULL;

HSearchRequest* HSearchRequest::New(::google::protobuf::Arena* arena) const {
  HSearchRequest* n = new HSearchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HSearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.HSearchRequest)
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_k_ = GOOGLE_ULONGLONG(0);
  distance_type_ = 0;
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HSearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.HSearchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string db_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), this->db_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HSearchRequest.db_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_feature;
        break;
      }

      // optional bytes feature = 2;
      case 2: {
        if (tag == 18) {
         parse_feature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_feature()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_top_k;
        break;
      }

      // optional uint64 top_k = 3;
      case 3: {
        if (tag == 24) {
         parse_top_k:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &top_k_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_distance_type;
        break;
      }

      // optional .faiss_server.HSearchRequest.DistanceType distance_type = 9;
      case 9: {
        if (tag == 72) {
         parse_distance_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_distance_type(static_cast< ::faiss_server::HSearchRequest_DistanceType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_request_id;
        break;
      }

      // optional string request_id = 10;
      case 10: {
        if (tag == 82) {
         parse_request_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HSearchRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.HSearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.HSearchRequest)
  return false;
#undef DO_
}

void HSearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.HSearchRequest)
  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), this->db_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSearchRequest.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // optional bytes feature = 2;
  if (this->feature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->feature(), output);
  }

  // optional uint64 top_k = 3;
  if (this->top_k() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->top_k(), output);
  }

  // optional .faiss_server.HSearchRequest.DistanceType distance_type = 9;
  if (this->distance_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->distance_type(), output);
  }

  // optional string request_id = 10;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSearchRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->request_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.HSearchRequest)
}

::google::protobuf::uint8* HSearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.HSearchRequest)
  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), this->db_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSearchRequest.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // optional bytes feature = 2;
  if (this->feature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->feature(), target);
  }

  // optional uint64 top_k = 3;
  if (this->top_k() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->top_k(), target);
  }

  // optional .faiss_server.HSearchRequest.DistanceType distance_type = 9;
  if (this->distance_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->distance_type(), target);
  }

  // optional string request_id = 10;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSearchRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->request_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.HSearchRequest)
  return target;
}

int HSearchRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.HSearchRequest)
  int total_size = 0;

  // optional string db_name = 1;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // optional bytes feature = 2;
  if (this->feature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->feature());
  }

  // optional uint64 top_k = 3;
  if (this->top_k() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->top_k());
  }

  // optional .faiss_server.HSearchRequest.DistanceType distance_type = 9;
  if (this->distance_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->distance_type());
  }

  // optional string request_id = 10;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HSearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.HSearchRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HSearchRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HSearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.HSearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.HSearchRequest)
    MergeFrom(*source);
  }
}

void HSearchRequest::MergeFrom(const HSearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.HSearchRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.feature().size() > 0) {

    feature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feature_);
  }
  if (from.top_k() != 0) {
    set_top_k(from.top_k());
  }
  if (from.distance_type() != 0) {
    set_distance_type(from.distance_type());
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
}

void HSearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.HSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HSearchRequest::CopyFrom(const HSearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.HSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HSearchRequest::IsInitialized() const {

  return true;
}

void HSearchRequest::Swap(HSearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HSearchRequest::InternalSwap(HSearchRequest* other) {
  db_name_.Swap(&other->db_name_);
  feature_.Swap(&other->feature_);
  std::swap(top_k_, other->top_k_);
  std::swap(distance_type_, other->distance_type_);
  request_id_.Swap(&other->request_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HSearchRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HSearchRequest_descriptor_;
  metadata.reflection = HSearchRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HSearchRequest

// optional string db_name = 1;
void HSearchRequest::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HSearchRequest::db_name() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchRequest.db_name)
  return db_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSearchRequest::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSearchRequest.db_name)
}
 void HSearchRequest::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSearchRequest.db_name)
}
 void HSearchRequest::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSearchRequest.db_name)
}
 ::std::string* HSearchRequest::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchRequest.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HSearchRequest::release_db_name() {
  // @@protoc_insertion_point(field_release:faiss_server.HSearchRequest.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSearchRequest::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSearchRequest.db_name)
}

// optional bytes feature = 2;
void HSearchRequest::clear_feature() {
  feature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HSearchRequest::feature() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchRequest.feature)
  return feature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSearchRequest::set_feature(const ::std::string& value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSearchRequest.feature)
}
 void HSearchRequest::set_feature(const char* value) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSearchRequest.feature)
}
 void HSearchRequest::set_feature(const void* value, size_t size) {
  
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSearchRequest.feature)
}
 ::std::string* HSearchRequest::mutable_feature() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchRequest.feature)
  return feature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HSearchRequest::release_feature() {
  // @@protoc_insertion_point(field_release:faiss_server.HSearchRequest.feature)
  
  return feature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSearchRequest::set_allocated_feature(::std::string* feature) {
  if (feature != NULL) {
    
  } else {
    
  }
  feature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feature);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSearchRequest.feature)
}

// optional uint64 top_k = 3;
void HSearchRequest::clear_top_k() {
  top_k_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 HSearchRequest::top_k() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchRequest.top_k)
  return top_k_;
}
 void HSearchRequest::set_top_k(::google::protobuf::uint64 value) {
  
  top_k_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSearchRequest.top_k)
}

// optional .faiss_server.HSearchRequest.DistanceType distance_type = 9;
void HSearchRequest::clear_distance_type() {
  distance_type_ = 0;
}
 ::faiss_server::HSearchRequest_DistanceType HSearchRequest::distance_type() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchRequest.distance_type)
  return static_cast< ::faiss_server::HSearchRequest_DistanceType >(distance_type_);
}
 void HSearchRequest::set_distance_type(::faiss_server::HSearchRequest_DistanceType value) {
  
  distance_type_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSearchRequest.distance_type)
}

// optional string request_id = 10;
void HSearchRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HSearchRequest::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchRequest.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSearchRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSearchRequest.request_id)
}
 void HSearchRequest::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSearchRequest.request_id)
}
 void HSearchRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSearchRequest.request_id)
}
 ::std::string* HSearchRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HSearchRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HSearchRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSearchRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSearchRequest.request_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HSearchResponse_Result::kScoreFieldNumber;
const int HSearchResponse_Result::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HSearchResponse_Result::HSearchResponse_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.HSearchResponse.Result)
}

void HSearchResponse_Result::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HSearchResponse_Result::HSearchResponse_Result(const HSearchResponse_Result& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.HSearchResponse.Result)
}

void HSearchResponse_Result::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  score_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
}

HSearchResponse_Result::~HSearchResponse_Result() {
  // @@protoc_insertion_point(destructor:faiss_server.HSearchResponse.Result)
  SharedDtor();
}

void HSearchResponse_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HSearchResponse_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HSearchResponse_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HSearchResponse_Result_descriptor_;
}

const HSearchResponse_Result& HSearchResponse_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

HSearchResponse_Result* HSearchResponse_Result::default_instance_ = NULL;

HSearchResponse_Result* HSearchResponse_Result::New(::google::protobuf::Arena* arena) const {
  HSearchResponse_Result* n = new HSearchResponse_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HSearchResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.HSearchResponse.Result)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HSearchResponse_Result, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HSearchResponse_Result*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, score_);

#undef ZR_HELPER_
#undef ZR_

}

bool HSearchResponse_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.HSearchResponse.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float score = 2;
      case 2: {
        if (tag == 21) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // optional uint64 id = 3;
      case 3: {
        if (tag == 24) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.HSearchResponse.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.HSearchResponse.Result)
  return false;
#undef DO_
}

void HSearchResponse_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.HSearchResponse.Result)
  // optional float score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  // optional uint64 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.HSearchResponse.Result)
}

::google::protobuf::uint8* HSearchResponse_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.HSearchResponse.Result)
  // optional float score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  // optional uint64 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.HSearchResponse.Result)
  return target;
}

int HSearchResponse_Result::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.HSearchResponse.Result)
  int total_size = 0;

  // optional float score = 2;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  // optional uint64 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HSearchResponse_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.HSearchResponse.Result)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HSearchResponse_Result* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HSearchResponse_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.HSearchResponse.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.HSearchResponse.Result)
    MergeFrom(*source);
  }
}

void HSearchResponse_Result::MergeFrom(const HSearchResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.HSearchResponse.Result)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void HSearchResponse_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.HSearchResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HSearchResponse_Result::CopyFrom(const HSearchResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.HSearchResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HSearchResponse_Result::IsInitialized() const {

  return true;
}

void HSearchResponse_Result::Swap(HSearchResponse_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HSearchResponse_Result::InternalSwap(HSearchResponse_Result* other) {
  std::swap(score_, other->score_);
  std::swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HSearchResponse_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HSearchResponse_Result_descriptor_;
  metadata.reflection = HSearchResponse_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HSearchResponse::kResultsFieldNumber;
const int HSearchResponse::kRequestIdFieldNumber;
const int HSearchResponse::kErrorCodeFieldNumber;
const int HSearchResponse::kErrorMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HSearchResponse::HSearchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:faiss_server.HSearchResponse)
}

void HSearchResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HSearchResponse::HSearchResponse(const HSearchResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:faiss_server.HSearchResponse)
}

void HSearchResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = GOOGLE_LONGLONG(0);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HSearchResponse::~HSearchResponse() {
  // @@protoc_insertion_point(destructor:faiss_server.HSearchResponse)
  SharedDtor();
}

void HSearchResponse::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HSearchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HSearchResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HSearchResponse_descriptor_;
}

const HSearchResponse& HSearchResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_faiss_5fdef_2eproto();
  return *default_instance_;
}

HSearchResponse* HSearchResponse::default_instance_ = NULL;

HSearchResponse* HSearchResponse::New(::google::protobuf::Arena* arena) const {
  HSearchResponse* n = new HSearchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HSearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:faiss_server.HSearchResponse)
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = GOOGLE_LONGLONG(0);
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  results_.Clear();
}

bool HSearchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:faiss_server.HSearchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .faiss_server.HSearchResponse.Result results = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_results;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_request_id;
        break;
      }

      // optional string request_id = 2;
      case 2: {
        if (tag == 18) {
         parse_request_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HSearchResponse.request_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_error_code;
        break;
      }

      // optional int64 error_code = 3;
      case 3: {
        if (tag == 24) {
         parse_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &error_code_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_error_msg;
        break;
      }

      // optional string error_msg = 4;
      case 4: {
        if (tag == 34) {
         parse_error_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), this->error_msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "faiss_server.HSearchResponse.error_msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:faiss_server.HSearchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:faiss_server.HSearchResponse)
  return false;
#undef DO_
}

void HSearchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:faiss_server.HSearchResponse)
  // repeated .faiss_server.HSearchResponse.Result results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  // optional string request_id = 2;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSearchResponse.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->request_id(), output);
  }

  // optional int64 error_code = 3;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->error_code(), output);
  }

  // optional string error_msg = 4;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), this->error_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSearchResponse.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->error_msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:faiss_server.HSearchResponse)
}

::google::protobuf::uint8* HSearchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:faiss_server.HSearchResponse)
  // repeated .faiss_server.HSearchResponse.Result results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->results(i), false, target);
  }

  // optional string request_id = 2;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSearchResponse.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->request_id(), target);
  }

  // optional int64 error_code = 3;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->error_code(), target);
  }

  // optional string error_msg = 4;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), this->error_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "faiss_server.HSearchResponse.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->error_msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:faiss_server.HSearchResponse)
  return target;
}

int HSearchResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:faiss_server.HSearchResponse)
  int total_size = 0;

  // optional string request_id = 2;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // optional int64 error_code = 3;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->error_code());
  }

  // optional string error_msg = 4;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  // repeated .faiss_server.HSearchResponse.Result results = 1;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HSearchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:faiss_server.HSearchResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HSearchResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HSearchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:faiss_server.HSearchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:faiss_server.HSearchResponse)
    MergeFrom(*source);
  }
}

void HSearchResponse::MergeFrom(const HSearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:faiss_server.HSearchResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  results_.MergeFrom(from.results_);
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
}

void HSearchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:faiss_server.HSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HSearchResponse::CopyFrom(const HSearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:faiss_server.HSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HSearchResponse::IsInitialized() const {

  return true;
}

void HSearchResponse::Swap(HSearchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HSearchResponse::InternalSwap(HSearchResponse* other) {
  results_.UnsafeArenaSwap(&other->results_);
  request_id_.Swap(&other->request_id_);
  std::swap(error_code_, other->error_code_);
  error_msg_.Swap(&other->error_msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HSearchResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HSearchResponse_descriptor_;
  metadata.reflection = HSearchResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HSearchResponse_Result

// optional float score = 2;
void HSearchResponse_Result::clear_score() {
  score_ = 0;
}
 float HSearchResponse_Result::score() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.Result.score)
  return score_;
}
 void HSearchResponse_Result::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSearchResponse.Result.score)
}

// optional uint64 id = 3;
void HSearchResponse_Result::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 HSearchResponse_Result::id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.Result.id)
  return id_;
}
 void HSearchResponse_Result::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSearchResponse.Result.id)
}

// -------------------------------------------------------------------

// HSearchResponse

// repeated .faiss_server.HSearchResponse.Result results = 1;
int HSearchResponse::results_size() const {
  return results_.size();
}
void HSearchResponse::clear_results() {
  results_.Clear();
}
const ::faiss_server::HSearchResponse_Result& HSearchResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.results)
  return results_.Get(index);
}
::faiss_server::HSearchResponse_Result* HSearchResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchResponse.results)
  return results_.Mutable(index);
}
::faiss_server::HSearchResponse_Result* HSearchResponse::add_results() {
  // @@protoc_insertion_point(field_add:faiss_server.HSearchResponse.results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::faiss_server::HSearchResponse_Result >*
HSearchResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:faiss_server.HSearchResponse.results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::faiss_server::HSearchResponse_Result >&
HSearchResponse::results() const {
  // @@protoc_insertion_point(field_list:faiss_server.HSearchResponse.results)
  return results_;
}

// optional string request_id = 2;
void HSearchResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HSearchResponse::request_id() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSearchResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSearchResponse.request_id)
}
 void HSearchResponse::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSearchResponse.request_id)
}
 void HSearchResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSearchResponse.request_id)
}
 ::std::string* HSearchResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HSearchResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:faiss_server.HSearchResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSearchResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSearchResponse.request_id)
}

// optional int64 error_code = 3;
void HSearchResponse::clear_error_code() {
  error_code_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 HSearchResponse::error_code() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.error_code)
  return error_code_;
}
 void HSearchResponse::set_error_code(::google::protobuf::int64 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:faiss_server.HSearchResponse.error_code)
}

// optional string error_msg = 4;
void HSearchResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HSearchResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:faiss_server.HSearchResponse.error_msg)
  return error_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSearchResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faiss_server.HSearchResponse.error_msg)
}
 void HSearchResponse::set_error_msg(const char* value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faiss_server.HSearchResponse.error_msg)
}
 void HSearchResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faiss_server.HSearchResponse.error_msg)
}
 ::std::string* HSearchResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:faiss_server.HSearchResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HSearchResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:faiss_server.HSearchResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HSearchResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:faiss_server.HSearchResponse.error_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace faiss_server

// @@protoc_insertion_point(global_scope)
